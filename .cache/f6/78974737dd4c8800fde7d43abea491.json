{"id":"../../node_modules/bmp-js/lib/encoder.js","dependencies":[{"name":"C:\\Users\\MICRO WORLD\\Desktop\\Node-project\\qr-code\\package.json","includedInParent":true,"mtime":1604232931498},{"name":"C:\\Users\\MICRO WORLD\\Desktop\\Node-project\\qr-code\\node_modules\\bmp-js\\package.json","includedInParent":true,"mtime":1604203027972},{"name":"buffer","parent":"C:\\Users\\MICRO WORLD\\Desktop\\Node-project\\qr-code\\node_modules\\bmp-js\\lib\\encoder.js","resolved":"C:\\Users\\MICRO WORLD\\Desktop\\Node-project\\qr-code\\node_modules\\buffer\\index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\n/**\n * @author shaozilee\n *\n * BMP format encoder,encode 24bit BMP\n * Not support quality compression\n *\n */\n\nfunction BmpEncoder(imgData){\n\tthis.buffer = imgData.data;\n\tthis.width = imgData.width;\n\tthis.height = imgData.height;\n\tthis.extraBytes = this.width%4;\n\tthis.rgbSize = this.height*(3*this.width+this.extraBytes);\n\tthis.headerInfoSize = 40;\n\n\tthis.data = [];\n\t/******************header***********************/\n\tthis.flag = \"BM\";\n\tthis.reserved = 0;\n\tthis.offset = 54;\n\tthis.fileSize = this.rgbSize+this.offset;\n\tthis.planes = 1;\n\tthis.bitPP = 24;\n\tthis.compress = 0;\n\tthis.hr = 0;\n\tthis.vr = 0;\n\tthis.colors = 0;\n\tthis.importantColors = 0;\n}\n\nBmpEncoder.prototype.encode = function() {\n\tvar tempBuffer = new Buffer(this.offset+this.rgbSize);\n\tthis.pos = 0;\n\ttempBuffer.write(this.flag,this.pos,2);this.pos+=2;\n\ttempBuffer.writeUInt32LE(this.fileSize,this.pos);this.pos+=4;\n\ttempBuffer.writeUInt32LE(this.reserved,this.pos);this.pos+=4;\n\ttempBuffer.writeUInt32LE(this.offset,this.pos);this.pos+=4;\n\n\ttempBuffer.writeUInt32LE(this.headerInfoSize,this.pos);this.pos+=4;\n\ttempBuffer.writeUInt32LE(this.width,this.pos);this.pos+=4;\n\ttempBuffer.writeInt32LE(-this.height,this.pos);this.pos+=4;\n\ttempBuffer.writeUInt16LE(this.planes,this.pos);this.pos+=2;\n\ttempBuffer.writeUInt16LE(this.bitPP,this.pos);this.pos+=2;\n\ttempBuffer.writeUInt32LE(this.compress,this.pos);this.pos+=4;\n\ttempBuffer.writeUInt32LE(this.rgbSize,this.pos);this.pos+=4;\n\ttempBuffer.writeUInt32LE(this.hr,this.pos);this.pos+=4;\n\ttempBuffer.writeUInt32LE(this.vr,this.pos);this.pos+=4;\n\ttempBuffer.writeUInt32LE(this.colors,this.pos);this.pos+=4;\n\ttempBuffer.writeUInt32LE(this.importantColors,this.pos);this.pos+=4;\n\n\tvar i=0;\n\tvar rowBytes = 3*this.width+this.extraBytes;\n\n\tfor (var y = 0; y <this.height; y++){\n\t\tfor (var x = 0; x < this.width; x++){\n\t\t\tvar p = this.pos+y*rowBytes+x*3;\n\t\t\ti++;//a\n\t\t\ttempBuffer[p]= this.buffer[i++];//b\n\t\t\ttempBuffer[p+1] = this.buffer[i++];//g\n\t\t\ttempBuffer[p+2]  = this.buffer[i++];//r\n\t\t}\n\t\tif(this.extraBytes>0){\n\t\t\tvar fillOffset = this.pos+y*rowBytes+this.width*3;\n\t\t\ttempBuffer.fill(0,fillOffset,fillOffset+this.extraBytes);\n\t\t}\n\t}\n\n\treturn tempBuffer;\n};\n\nmodule.exports = function(imgData, quality) {\n  if (typeof quality === 'undefined') quality = 100;\n \tvar encoder = new BmpEncoder(imgData);\n\tvar data = encoder.encode();\n  return {\n    data: data,\n    width: imgData.width,\n    height: imgData.height\n  };\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/bmp-js/lib/encoder.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/bmp-js/lib/encoder.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/bmp-js/lib/encoder.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/bmp-js/lib/encoder.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/bmp-js/lib/encoder.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/bmp-js/lib/encoder.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/bmp-js/lib/encoder.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/bmp-js/lib/encoder.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/bmp-js/lib/encoder.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/bmp-js/lib/encoder.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/bmp-js/lib/encoder.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/bmp-js/lib/encoder.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/bmp-js/lib/encoder.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/bmp-js/lib/encoder.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/bmp-js/lib/encoder.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/bmp-js/lib/encoder.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/bmp-js/lib/encoder.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/bmp-js/lib/encoder.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/bmp-js/lib/encoder.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/bmp-js/lib/encoder.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/bmp-js/lib/encoder.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/bmp-js/lib/encoder.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/bmp-js/lib/encoder.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/bmp-js/lib/encoder.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/bmp-js/lib/encoder.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/bmp-js/lib/encoder.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/bmp-js/lib/encoder.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/bmp-js/lib/encoder.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/bmp-js/lib/encoder.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/bmp-js/lib/encoder.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/bmp-js/lib/encoder.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/bmp-js/lib/encoder.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/bmp-js/lib/encoder.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/bmp-js/lib/encoder.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/bmp-js/lib/encoder.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/bmp-js/lib/encoder.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/bmp-js/lib/encoder.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/bmp-js/lib/encoder.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../../node_modules/bmp-js/lib/encoder.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../../node_modules/bmp-js/lib/encoder.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../../node_modules/bmp-js/lib/encoder.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../../node_modules/bmp-js/lib/encoder.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../../node_modules/bmp-js/lib/encoder.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../../node_modules/bmp-js/lib/encoder.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../../node_modules/bmp-js/lib/encoder.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../../node_modules/bmp-js/lib/encoder.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../../node_modules/bmp-js/lib/encoder.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../../node_modules/bmp-js/lib/encoder.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../../node_modules/bmp-js/lib/encoder.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../../node_modules/bmp-js/lib/encoder.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../../node_modules/bmp-js/lib/encoder.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../../node_modules/bmp-js/lib/encoder.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../../node_modules/bmp-js/lib/encoder.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../../node_modules/bmp-js/lib/encoder.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../../node_modules/bmp-js/lib/encoder.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../../node_modules/bmp-js/lib/encoder.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../../node_modules/bmp-js/lib/encoder.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../../node_modules/bmp-js/lib/encoder.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../../node_modules/bmp-js/lib/encoder.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../../node_modules/bmp-js/lib/encoder.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../../node_modules/bmp-js/lib/encoder.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../../node_modules/bmp-js/lib/encoder.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"../../node_modules/bmp-js/lib/encoder.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"../../node_modules/bmp-js/lib/encoder.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"../../node_modules/bmp-js/lib/encoder.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"../../node_modules/bmp-js/lib/encoder.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"../../node_modules/bmp-js/lib/encoder.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"../../node_modules/bmp-js/lib/encoder.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"../../node_modules/bmp-js/lib/encoder.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"../../node_modules/bmp-js/lib/encoder.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"../../node_modules/bmp-js/lib/encoder.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"../../node_modules/bmp-js/lib/encoder.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"../../node_modules/bmp-js/lib/encoder.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"../../node_modules/bmp-js/lib/encoder.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"../../node_modules/bmp-js/lib/encoder.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"../../node_modules/bmp-js/lib/encoder.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"../../node_modules/bmp-js/lib/encoder.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"../../node_modules/bmp-js/lib/encoder.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"../../node_modules/bmp-js/lib/encoder.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"../../node_modules/bmp-js/lib/encoder.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"../../node_modules/bmp-js/lib/encoder.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"../../node_modules/bmp-js/lib/encoder.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}}],"sources":{"../../node_modules/bmp-js/lib/encoder.js":"/**\n * @author shaozilee\n *\n * BMP format encoder,encode 24bit BMP\n * Not support quality compression\n *\n */\n\nfunction BmpEncoder(imgData){\n\tthis.buffer = imgData.data;\n\tthis.width = imgData.width;\n\tthis.height = imgData.height;\n\tthis.extraBytes = this.width%4;\n\tthis.rgbSize = this.height*(3*this.width+this.extraBytes);\n\tthis.headerInfoSize = 40;\n\n\tthis.data = [];\n\t/******************header***********************/\n\tthis.flag = \"BM\";\n\tthis.reserved = 0;\n\tthis.offset = 54;\n\tthis.fileSize = this.rgbSize+this.offset;\n\tthis.planes = 1;\n\tthis.bitPP = 24;\n\tthis.compress = 0;\n\tthis.hr = 0;\n\tthis.vr = 0;\n\tthis.colors = 0;\n\tthis.importantColors = 0;\n}\n\nBmpEncoder.prototype.encode = function() {\n\tvar tempBuffer = new Buffer(this.offset+this.rgbSize);\n\tthis.pos = 0;\n\ttempBuffer.write(this.flag,this.pos,2);this.pos+=2;\n\ttempBuffer.writeUInt32LE(this.fileSize,this.pos);this.pos+=4;\n\ttempBuffer.writeUInt32LE(this.reserved,this.pos);this.pos+=4;\n\ttempBuffer.writeUInt32LE(this.offset,this.pos);this.pos+=4;\n\n\ttempBuffer.writeUInt32LE(this.headerInfoSize,this.pos);this.pos+=4;\n\ttempBuffer.writeUInt32LE(this.width,this.pos);this.pos+=4;\n\ttempBuffer.writeInt32LE(-this.height,this.pos);this.pos+=4;\n\ttempBuffer.writeUInt16LE(this.planes,this.pos);this.pos+=2;\n\ttempBuffer.writeUInt16LE(this.bitPP,this.pos);this.pos+=2;\n\ttempBuffer.writeUInt32LE(this.compress,this.pos);this.pos+=4;\n\ttempBuffer.writeUInt32LE(this.rgbSize,this.pos);this.pos+=4;\n\ttempBuffer.writeUInt32LE(this.hr,this.pos);this.pos+=4;\n\ttempBuffer.writeUInt32LE(this.vr,this.pos);this.pos+=4;\n\ttempBuffer.writeUInt32LE(this.colors,this.pos);this.pos+=4;\n\ttempBuffer.writeUInt32LE(this.importantColors,this.pos);this.pos+=4;\n\n\tvar i=0;\n\tvar rowBytes = 3*this.width+this.extraBytes;\n\n\tfor (var y = 0; y <this.height; y++){\n\t\tfor (var x = 0; x < this.width; x++){\n\t\t\tvar p = this.pos+y*rowBytes+x*3;\n\t\t\ti++;//a\n\t\t\ttempBuffer[p]= this.buffer[i++];//b\n\t\t\ttempBuffer[p+1] = this.buffer[i++];//g\n\t\t\ttempBuffer[p+2]  = this.buffer[i++];//r\n\t\t}\n\t\tif(this.extraBytes>0){\n\t\t\tvar fillOffset = this.pos+y*rowBytes+this.width*3;\n\t\t\ttempBuffer.fill(0,fillOffset,fillOffset+this.extraBytes);\n\t\t}\n\t}\n\n\treturn tempBuffer;\n};\n\nmodule.exports = function(imgData, quality) {\n  if (typeof quality === 'undefined') quality = 100;\n \tvar encoder = new BmpEncoder(imgData);\n\tvar data = encoder.encode();\n  return {\n    data: data,\n    width: imgData.width,\n    height: imgData.height\n  };\n};\n"},"lineCount":83}},"error":null,"hash":"3d0b88bf5e45a49e1461a96970390608","cacheData":{"env":{}}}