{"id":"../../node_modules/jpeg-js/lib/decoder.js","dependencies":[{"name":"C:\\Users\\MICRO WORLD\\Desktop\\Node-project\\qr-code\\package.json","includedInParent":true,"mtime":1604232931498},{"name":"C:\\Users\\MICRO WORLD\\Desktop\\Node-project\\qr-code\\node_modules\\jpeg-js\\package.json","includedInParent":true,"mtime":1604203027974},{"name":"buffer","parent":"C:\\Users\\MICRO WORLD\\Desktop\\Node-project\\qr-code\\node_modules\\jpeg-js\\lib\\decoder.js","resolved":"C:\\Users\\MICRO WORLD\\Desktop\\Node-project\\qr-code\\node_modules\\buffer\\index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\n/* -*- tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- /\n/* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */\n/*\n   Copyright 2011 notmasteryet\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\n// - The JPEG specification can be found in the ITU CCITT Recommendation T.81\n//   (www.w3.org/Graphics/JPEG/itu-t81.pdf)\n// - The JFIF specification can be found in the JPEG File Interchange Format\n//   (www.w3.org/Graphics/JPEG/jfif3.pdf)\n// - The Adobe Application-Specific JPEG markers in the Supporting the DCT Filters\n//   in PostScript Level 2, Technical Note #5116\n//   (partners.adobe.com/public/developer/en/ps/sdk/5116.DCT_Filter.pdf)\n\nvar JpegImage = (function jpegImage() {\n  \"use strict\";\n  var dctZigZag = new Int32Array([\n     0,\n     1,  8,\n    16,  9,  2,\n     3, 10, 17, 24,\n    32, 25, 18, 11, 4,\n     5, 12, 19, 26, 33, 40,\n    48, 41, 34, 27, 20, 13,  6,\n     7, 14, 21, 28, 35, 42, 49, 56,\n    57, 50, 43, 36, 29, 22, 15,\n    23, 30, 37, 44, 51, 58,\n    59, 52, 45, 38, 31,\n    39, 46, 53, 60,\n    61, 54, 47,\n    55, 62,\n    63\n  ]);\n\n  var dctCos1  =  4017   // cos(pi/16)\n  var dctSin1  =   799   // sin(pi/16)\n  var dctCos3  =  3406   // cos(3*pi/16)\n  var dctSin3  =  2276   // sin(3*pi/16)\n  var dctCos6  =  1567   // cos(6*pi/16)\n  var dctSin6  =  3784   // sin(6*pi/16)\n  var dctSqrt2 =  5793   // sqrt(2)\n  var dctSqrt1d2 = 2896  // sqrt(2) / 2\n\n  function constructor() {\n  }\n\n  function buildHuffmanTable(codeLengths, values) {\n    var k = 0, code = [], i, j, length = 16;\n    while (length > 0 && !codeLengths[length - 1])\n      length--;\n    code.push({children: [], index: 0});\n    var p = code[0], q;\n    for (i = 0; i < length; i++) {\n      for (j = 0; j < codeLengths[i]; j++) {\n        p = code.pop();\n        p.children[p.index] = values[k];\n        while (p.index > 0) {\n          if (code.length === 0)\n            throw new Error('Could not recreate Huffman Table');\n          p = code.pop();\n        }\n        p.index++;\n        code.push(p);\n        while (code.length <= i) {\n          code.push(q = {children: [], index: 0});\n          p.children[p.index] = q.children;\n          p = q;\n        }\n        k++;\n      }\n      if (i + 1 < length) {\n        // p here points to last code\n        code.push(q = {children: [], index: 0});\n        p.children[p.index] = q.children;\n        p = q;\n      }\n    }\n    return code[0].children;\n  }\n\n  function decodeScan(data, offset,\n                      frame, components, resetInterval,\n                      spectralStart, spectralEnd,\n                      successivePrev, successive, opts) {\n    var precision = frame.precision;\n    var samplesPerLine = frame.samplesPerLine;\n    var scanLines = frame.scanLines;\n    var mcusPerLine = frame.mcusPerLine;\n    var progressive = frame.progressive;\n    var maxH = frame.maxH, maxV = frame.maxV;\n\n    var startOffset = offset, bitsData = 0, bitsCount = 0;\n    function readBit() {\n      if (bitsCount > 0) {\n        bitsCount--;\n        return (bitsData >> bitsCount) & 1;\n      }\n      bitsData = data[offset++];\n      if (bitsData == 0xFF) {\n        var nextByte = data[offset++];\n        if (nextByte) {\n          throw new Error(\"unexpected marker: \" + ((bitsData << 8) | nextByte).toString(16));\n        }\n        // unstuff 0\n      }\n      bitsCount = 7;\n      return bitsData >>> 7;\n    }\n    function decodeHuffman(tree) {\n      var node = tree, bit;\n      while ((bit = readBit()) !== null) {\n        node = node[bit];\n        if (typeof node === 'number')\n          return node;\n        if (typeof node !== 'object')\n          throw new Error(\"invalid huffman sequence\");\n      }\n      return null;\n    }\n    function receive(length) {\n      var n = 0;\n      while (length > 0) {\n        var bit = readBit();\n        if (bit === null) return;\n        n = (n << 1) | bit;\n        length--;\n      }\n      return n;\n    }\n    function receiveAndExtend(length) {\n      var n = receive(length);\n      if (n >= 1 << (length - 1))\n        return n;\n      return n + (-1 << length) + 1;\n    }\n    function decodeBaseline(component, zz) {\n      var t = decodeHuffman(component.huffmanTableDC);\n      var diff = t === 0 ? 0 : receiveAndExtend(t);\n      zz[0]= (component.pred += diff);\n      var k = 1;\n      while (k < 64) {\n        var rs = decodeHuffman(component.huffmanTableAC);\n        var s = rs & 15, r = rs >> 4;\n        if (s === 0) {\n          if (r < 15)\n            break;\n          k += 16;\n          continue;\n        }\n        k += r;\n        var z = dctZigZag[k];\n        zz[z] = receiveAndExtend(s);\n        k++;\n      }\n    }\n    function decodeDCFirst(component, zz) {\n      var t = decodeHuffman(component.huffmanTableDC);\n      var diff = t === 0 ? 0 : (receiveAndExtend(t) << successive);\n      zz[0] = (component.pred += diff);\n    }\n    function decodeDCSuccessive(component, zz) {\n      zz[0] |= readBit() << successive;\n    }\n    var eobrun = 0;\n    function decodeACFirst(component, zz) {\n      if (eobrun > 0) {\n        eobrun--;\n        return;\n      }\n      var k = spectralStart, e = spectralEnd;\n      while (k <= e) {\n        var rs = decodeHuffman(component.huffmanTableAC);\n        var s = rs & 15, r = rs >> 4;\n        if (s === 0) {\n          if (r < 15) {\n            eobrun = receive(r) + (1 << r) - 1;\n            break;\n          }\n          k += 16;\n          continue;\n        }\n        k += r;\n        var z = dctZigZag[k];\n        zz[z] = receiveAndExtend(s) * (1 << successive);\n        k++;\n      }\n    }\n    var successiveACState = 0, successiveACNextValue;\n    function decodeACSuccessive(component, zz) {\n      var k = spectralStart, e = spectralEnd, r = 0;\n      while (k <= e) {\n        var z = dctZigZag[k];\n        var direction = zz[z] < 0 ? -1 : 1;\n        switch (successiveACState) {\n        case 0: // initial state\n          var rs = decodeHuffman(component.huffmanTableAC);\n          var s = rs & 15, r = rs >> 4;\n          if (s === 0) {\n            if (r < 15) {\n              eobrun = receive(r) + (1 << r);\n              successiveACState = 4;\n            } else {\n              r = 16;\n              successiveACState = 1;\n            }\n          } else {\n            if (s !== 1)\n              throw new Error(\"invalid ACn encoding\");\n            successiveACNextValue = receiveAndExtend(s);\n            successiveACState = r ? 2 : 3;\n          }\n          continue;\n        case 1: // skipping r zero items\n        case 2:\n          if (zz[z])\n            zz[z] += (readBit() << successive) * direction;\n          else {\n            r--;\n            if (r === 0)\n              successiveACState = successiveACState == 2 ? 3 : 0;\n          }\n          break;\n        case 3: // set value for a zero item\n          if (zz[z])\n            zz[z] += (readBit() << successive) * direction;\n          else {\n            zz[z] = successiveACNextValue << successive;\n            successiveACState = 0;\n          }\n          break;\n        case 4: // eob\n          if (zz[z])\n            zz[z] += (readBit() << successive) * direction;\n          break;\n        }\n        k++;\n      }\n      if (successiveACState === 4) {\n        eobrun--;\n        if (eobrun === 0)\n          successiveACState = 0;\n      }\n    }\n    function decodeMcu(component, decode, mcu, row, col) {\n      var mcuRow = (mcu / mcusPerLine) | 0;\n      var mcuCol = mcu % mcusPerLine;\n      var blockRow = mcuRow * component.v + row;\n      var blockCol = mcuCol * component.h + col;\n      // If the block is missing and we're in tolerant mode, just skip it.\n      if (component.blocks[blockRow] === undefined && opts.tolerantDecoding)\n        return;\n      decode(component, component.blocks[blockRow][blockCol]);\n    }\n    function decodeBlock(component, decode, mcu) {\n      var blockRow = (mcu / component.blocksPerLine) | 0;\n      var blockCol = mcu % component.blocksPerLine;\n      // If the block is missing and we're in tolerant mode, just skip it.\n      if (component.blocks[blockRow] === undefined && opts.tolerantDecoding)\n        return;\n      decode(component, component.blocks[blockRow][blockCol]);\n    }\n\n    var componentsLength = components.length;\n    var component, i, j, k, n;\n    var decodeFn;\n    if (progressive) {\n      if (spectralStart === 0)\n        decodeFn = successivePrev === 0 ? decodeDCFirst : decodeDCSuccessive;\n      else\n        decodeFn = successivePrev === 0 ? decodeACFirst : decodeACSuccessive;\n    } else {\n      decodeFn = decodeBaseline;\n    }\n\n    var mcu = 0, marker;\n    var mcuExpected;\n    if (componentsLength == 1) {\n      mcuExpected = components[0].blocksPerLine * components[0].blocksPerColumn;\n    } else {\n      mcuExpected = mcusPerLine * frame.mcusPerColumn;\n    }\n    if (!resetInterval) resetInterval = mcuExpected;\n\n    var h, v;\n    while (mcu < mcuExpected) {\n      // reset interval stuff\n      for (i = 0; i < componentsLength; i++)\n        components[i].pred = 0;\n      eobrun = 0;\n\n      if (componentsLength == 1) {\n        component = components[0];\n        for (n = 0; n < resetInterval; n++) {\n          decodeBlock(component, decodeFn, mcu);\n          mcu++;\n        }\n      } else {\n        for (n = 0; n < resetInterval; n++) {\n          for (i = 0; i < componentsLength; i++) {\n            component = components[i];\n            h = component.h;\n            v = component.v;\n            for (j = 0; j < v; j++) {\n              for (k = 0; k < h; k++) {\n                decodeMcu(component, decodeFn, mcu, j, k);\n              }\n            }\n          }\n          mcu++;\n\n          // If we've reached our expected MCU's, stop decoding\n          if (mcu === mcuExpected) break;\n        }\n      }\n\n      if (mcu === mcuExpected) {\n        // Skip trailing bytes at the end of the scan - until we reach the next marker\n        do {\n          if (data[offset] === 0xFF) {\n            if (data[offset + 1] !== 0x00) {\n              break;\n            }\n          }\n          offset += 1;\n        } while (offset < data.length - 2);\n      }\n\n      // find marker\n      bitsCount = 0;\n      marker = (data[offset] << 8) | data[offset + 1];\n      if (marker < 0xFF00) {\n        throw new Error(\"marker was not found\");\n      }\n\n      if (marker >= 0xFFD0 && marker <= 0xFFD7) { // RSTx\n        offset += 2;\n      }\n      else\n        break;\n    }\n\n    return offset - startOffset;\n  }\n\n  function buildComponentData(frame, component) {\n    var lines = [];\n    var blocksPerLine = component.blocksPerLine;\n    var blocksPerColumn = component.blocksPerColumn;\n    var samplesPerLine = blocksPerLine << 3;\n    // Only 1 used per invocation of this function and garbage collected after invocation, so no need to account for its memory footprint.\n    var R = new Int32Array(64), r = new Uint8Array(64);\n\n    // A port of poppler's IDCT method which in turn is taken from:\n    //   Christoph Loeffler, Adriaan Ligtenberg, George S. Moschytz,\n    //   \"Practical Fast 1-D DCT Algorithms with 11 Multiplications\",\n    //   IEEE Intl. Conf. on Acoustics, Speech & Signal Processing, 1989,\n    //   988-991.\n    function quantizeAndInverse(zz, dataOut, dataIn) {\n      var qt = component.quantizationTable;\n      var v0, v1, v2, v3, v4, v5, v6, v7, t;\n      var p = dataIn;\n      var i;\n\n      // dequant\n      for (i = 0; i < 64; i++)\n        p[i] = zz[i] * qt[i];\n\n      // inverse DCT on rows\n      for (i = 0; i < 8; ++i) {\n        var row = 8 * i;\n\n        // check for all-zero AC coefficients\n        if (p[1 + row] == 0 && p[2 + row] == 0 && p[3 + row] == 0 &&\n            p[4 + row] == 0 && p[5 + row] == 0 && p[6 + row] == 0 &&\n            p[7 + row] == 0) {\n          t = (dctSqrt2 * p[0 + row] + 512) >> 10;\n          p[0 + row] = t;\n          p[1 + row] = t;\n          p[2 + row] = t;\n          p[3 + row] = t;\n          p[4 + row] = t;\n          p[5 + row] = t;\n          p[6 + row] = t;\n          p[7 + row] = t;\n          continue;\n        }\n\n        // stage 4\n        v0 = (dctSqrt2 * p[0 + row] + 128) >> 8;\n        v1 = (dctSqrt2 * p[4 + row] + 128) >> 8;\n        v2 = p[2 + row];\n        v3 = p[6 + row];\n        v4 = (dctSqrt1d2 * (p[1 + row] - p[7 + row]) + 128) >> 8;\n        v7 = (dctSqrt1d2 * (p[1 + row] + p[7 + row]) + 128) >> 8;\n        v5 = p[3 + row] << 4;\n        v6 = p[5 + row] << 4;\n\n        // stage 3\n        t = (v0 - v1+ 1) >> 1;\n        v0 = (v0 + v1 + 1) >> 1;\n        v1 = t;\n        t = (v2 * dctSin6 + v3 * dctCos6 + 128) >> 8;\n        v2 = (v2 * dctCos6 - v3 * dctSin6 + 128) >> 8;\n        v3 = t;\n        t = (v4 - v6 + 1) >> 1;\n        v4 = (v4 + v6 + 1) >> 1;\n        v6 = t;\n        t = (v7 + v5 + 1) >> 1;\n        v5 = (v7 - v5 + 1) >> 1;\n        v7 = t;\n\n        // stage 2\n        t = (v0 - v3 + 1) >> 1;\n        v0 = (v0 + v3 + 1) >> 1;\n        v3 = t;\n        t = (v1 - v2 + 1) >> 1;\n        v1 = (v1 + v2 + 1) >> 1;\n        v2 = t;\n        t = (v4 * dctSin3 + v7 * dctCos3 + 2048) >> 12;\n        v4 = (v4 * dctCos3 - v7 * dctSin3 + 2048) >> 12;\n        v7 = t;\n        t = (v5 * dctSin1 + v6 * dctCos1 + 2048) >> 12;\n        v5 = (v5 * dctCos1 - v6 * dctSin1 + 2048) >> 12;\n        v6 = t;\n\n        // stage 1\n        p[0 + row] = v0 + v7;\n        p[7 + row] = v0 - v7;\n        p[1 + row] = v1 + v6;\n        p[6 + row] = v1 - v6;\n        p[2 + row] = v2 + v5;\n        p[5 + row] = v2 - v5;\n        p[3 + row] = v3 + v4;\n        p[4 + row] = v3 - v4;\n      }\n\n      // inverse DCT on columns\n      for (i = 0; i < 8; ++i) {\n        var col = i;\n\n        // check for all-zero AC coefficients\n        if (p[1*8 + col] == 0 && p[2*8 + col] == 0 && p[3*8 + col] == 0 &&\n            p[4*8 + col] == 0 && p[5*8 + col] == 0 && p[6*8 + col] == 0 &&\n            p[7*8 + col] == 0) {\n          t = (dctSqrt2 * dataIn[i+0] + 8192) >> 14;\n          p[0*8 + col] = t;\n          p[1*8 + col] = t;\n          p[2*8 + col] = t;\n          p[3*8 + col] = t;\n          p[4*8 + col] = t;\n          p[5*8 + col] = t;\n          p[6*8 + col] = t;\n          p[7*8 + col] = t;\n          continue;\n        }\n\n        // stage 4\n        v0 = (dctSqrt2 * p[0*8 + col] + 2048) >> 12;\n        v1 = (dctSqrt2 * p[4*8 + col] + 2048) >> 12;\n        v2 = p[2*8 + col];\n        v3 = p[6*8 + col];\n        v4 = (dctSqrt1d2 * (p[1*8 + col] - p[7*8 + col]) + 2048) >> 12;\n        v7 = (dctSqrt1d2 * (p[1*8 + col] + p[7*8 + col]) + 2048) >> 12;\n        v5 = p[3*8 + col];\n        v6 = p[5*8 + col];\n\n        // stage 3\n        t = (v0 - v1 + 1) >> 1;\n        v0 = (v0 + v1 + 1) >> 1;\n        v1 = t;\n        t = (v2 * dctSin6 + v3 * dctCos6 + 2048) >> 12;\n        v2 = (v2 * dctCos6 - v3 * dctSin6 + 2048) >> 12;\n        v3 = t;\n        t = (v4 - v6 + 1) >> 1;\n        v4 = (v4 + v6 + 1) >> 1;\n        v6 = t;\n        t = (v7 + v5 + 1) >> 1;\n        v5 = (v7 - v5 + 1) >> 1;\n        v7 = t;\n\n        // stage 2\n        t = (v0 - v3 + 1) >> 1;\n        v0 = (v0 + v3 + 1) >> 1;\n        v3 = t;\n        t = (v1 - v2 + 1) >> 1;\n        v1 = (v1 + v2 + 1) >> 1;\n        v2 = t;\n        t = (v4 * dctSin3 + v7 * dctCos3 + 2048) >> 12;\n        v4 = (v4 * dctCos3 - v7 * dctSin3 + 2048) >> 12;\n        v7 = t;\n        t = (v5 * dctSin1 + v6 * dctCos1 + 2048) >> 12;\n        v5 = (v5 * dctCos1 - v6 * dctSin1 + 2048) >> 12;\n        v6 = t;\n\n        // stage 1\n        p[0*8 + col] = v0 + v7;\n        p[7*8 + col] = v0 - v7;\n        p[1*8 + col] = v1 + v6;\n        p[6*8 + col] = v1 - v6;\n        p[2*8 + col] = v2 + v5;\n        p[5*8 + col] = v2 - v5;\n        p[3*8 + col] = v3 + v4;\n        p[4*8 + col] = v3 - v4;\n      }\n\n      // convert to 8-bit integers\n      for (i = 0; i < 64; ++i) {\n        var sample = 128 + ((p[i] + 8) >> 4);\n        dataOut[i] = sample < 0 ? 0 : sample > 0xFF ? 0xFF : sample;\n      }\n    }\n\n    requestMemoryAllocation(samplesPerLine * blocksPerColumn * 8);\n\n    var i, j;\n    for (var blockRow = 0; blockRow < blocksPerColumn; blockRow++) {\n      var scanLine = blockRow << 3;\n      for (i = 0; i < 8; i++)\n        lines.push(new Uint8Array(samplesPerLine));\n      for (var blockCol = 0; blockCol < blocksPerLine; blockCol++) {\n        quantizeAndInverse(component.blocks[blockRow][blockCol], r, R);\n\n        var offset = 0, sample = blockCol << 3;\n        for (j = 0; j < 8; j++) {\n          var line = lines[scanLine + j];\n          for (i = 0; i < 8; i++)\n            line[sample + i] = r[offset++];\n        }\n      }\n    }\n    return lines;\n  }\n\n  function clampTo8bit(a) {\n    return a < 0 ? 0 : a > 255 ? 255 : a;\n  }\n\n  constructor.prototype = {\n    load: function load(path) {\n      var xhr = new XMLHttpRequest();\n      xhr.open(\"GET\", path, true);\n      xhr.responseType = \"arraybuffer\";\n      xhr.onload = (function() {\n        // TODO catch parse error\n        var data = new Uint8Array(xhr.response || xhr.mozResponseArrayBuffer);\n        this.parse(data);\n        if (this.onload)\n          this.onload();\n      }).bind(this);\n      xhr.send(null);\n    },\n    parse: function parse(data) {\n      var maxResolutionInPixels = this.opts.maxResolutionInMP * 1000 * 1000;\n      var offset = 0, length = data.length;\n      function readUint16() {\n        var value = (data[offset] << 8) | data[offset + 1];\n        offset += 2;\n        return value;\n      }\n      function readDataBlock() {\n        var length = readUint16();\n        var array = data.subarray(offset, offset + length - 2);\n        offset += array.length;\n        return array;\n      }\n      function prepareComponents(frame) {\n        var maxH = 0, maxV = 0;\n        var component, componentId;\n        for (componentId in frame.components) {\n          if (frame.components.hasOwnProperty(componentId)) {\n            component = frame.components[componentId];\n            if (maxH < component.h) maxH = component.h;\n            if (maxV < component.v) maxV = component.v;\n          }\n        }\n        var mcusPerLine = Math.ceil(frame.samplesPerLine / 8 / maxH);\n        var mcusPerColumn = Math.ceil(frame.scanLines / 8 / maxV);\n        for (componentId in frame.components) {\n          if (frame.components.hasOwnProperty(componentId)) {\n            component = frame.components[componentId];\n            var blocksPerLine = Math.ceil(Math.ceil(frame.samplesPerLine / 8) * component.h / maxH);\n            var blocksPerColumn = Math.ceil(Math.ceil(frame.scanLines  / 8) * component.v / maxV);\n            var blocksPerLineForMcu = mcusPerLine * component.h;\n            var blocksPerColumnForMcu = mcusPerColumn * component.v;\n            var blocksToAllocate = blocksPerColumnForMcu * blocksPerLineForMcu;\n            var blocks = [];\n\n            // Each block is a Int32Array of length 64 (4 x 64 = 256 bytes)\n            requestMemoryAllocation(blocksToAllocate * 256);\n\n            for (var i = 0; i < blocksPerColumnForMcu; i++) {\n              var row = [];\n              for (var j = 0; j < blocksPerLineForMcu; j++)\n                row.push(new Int32Array(64));\n              blocks.push(row);\n            }\n            component.blocksPerLine = blocksPerLine;\n            component.blocksPerColumn = blocksPerColumn;\n            component.blocks = blocks;\n          }\n        }\n        frame.maxH = maxH;\n        frame.maxV = maxV;\n        frame.mcusPerLine = mcusPerLine;\n        frame.mcusPerColumn = mcusPerColumn;\n      }\n      var jfif = null;\n      var adobe = null;\n      var pixels = null;\n      var frame, resetInterval;\n      var quantizationTables = [], frames = [];\n      var huffmanTablesAC = [], huffmanTablesDC = [];\n      var fileMarker = readUint16();\n      this.comments = [];\n      if (fileMarker != 0xFFD8) { // SOI (Start of Image)\n        throw new Error(\"SOI not found\");\n      }\n\n      fileMarker = readUint16();\n      while (fileMarker != 0xFFD9) { // EOI (End of image)\n        var i, j, l;\n        switch(fileMarker) {\n          case 0xFF00: break;\n          case 0xFFE0: // APP0 (Application Specific)\n          case 0xFFE1: // APP1\n          case 0xFFE2: // APP2\n          case 0xFFE3: // APP3\n          case 0xFFE4: // APP4\n          case 0xFFE5: // APP5\n          case 0xFFE6: // APP6\n          case 0xFFE7: // APP7\n          case 0xFFE8: // APP8\n          case 0xFFE9: // APP9\n          case 0xFFEA: // APP10\n          case 0xFFEB: // APP11\n          case 0xFFEC: // APP12\n          case 0xFFED: // APP13\n          case 0xFFEE: // APP14\n          case 0xFFEF: // APP15\n          case 0xFFFE: // COM (Comment)\n            var appData = readDataBlock();\n\n            if (fileMarker === 0xFFFE) {\n              var comment = String.fromCharCode.apply(null, appData);\n              this.comments.push(comment);\n            }\n\n            if (fileMarker === 0xFFE0) {\n              if (appData[0] === 0x4A && appData[1] === 0x46 && appData[2] === 0x49 &&\n                appData[3] === 0x46 && appData[4] === 0) { // 'JFIF\\x00'\n                jfif = {\n                  version: { major: appData[5], minor: appData[6] },\n                  densityUnits: appData[7],\n                  xDensity: (appData[8] << 8) | appData[9],\n                  yDensity: (appData[10] << 8) | appData[11],\n                  thumbWidth: appData[12],\n                  thumbHeight: appData[13],\n                  thumbData: appData.subarray(14, 14 + 3 * appData[12] * appData[13])\n                };\n              }\n            }\n            // TODO APP1 - Exif\n            if (fileMarker === 0xFFE1) {\n              if (appData[0] === 0x45 &&\n                appData[1] === 0x78 &&\n                appData[2] === 0x69 &&\n                appData[3] === 0x66 &&\n                appData[4] === 0) { // 'EXIF\\x00'\n                this.exifBuffer = appData.subarray(5, appData.length);\n              }\n            }\n\n            if (fileMarker === 0xFFEE) {\n              if (appData[0] === 0x41 && appData[1] === 0x64 && appData[2] === 0x6F &&\n                appData[3] === 0x62 && appData[4] === 0x65 && appData[5] === 0) { // 'Adobe\\x00'\n                adobe = {\n                  version: appData[6],\n                  flags0: (appData[7] << 8) | appData[8],\n                  flags1: (appData[9] << 8) | appData[10],\n                  transformCode: appData[11]\n                };\n              }\n            }\n            break;\n\n          case 0xFFDB: // DQT (Define Quantization Tables)\n            var quantizationTablesLength = readUint16();\n            var quantizationTablesEnd = quantizationTablesLength + offset - 2;\n            while (offset < quantizationTablesEnd) {\n              var quantizationTableSpec = data[offset++];\n              requestMemoryAllocation(64 * 4);\n              var tableData = new Int32Array(64);\n              if ((quantizationTableSpec >> 4) === 0) { // 8 bit values\n                for (j = 0; j < 64; j++) {\n                  var z = dctZigZag[j];\n                  tableData[z] = data[offset++];\n                }\n              } else if ((quantizationTableSpec >> 4) === 1) { //16 bit\n                for (j = 0; j < 64; j++) {\n                  var z = dctZigZag[j];\n                  tableData[z] = readUint16();\n                }\n              } else\n                throw new Error(\"DQT: invalid table spec\");\n              quantizationTables[quantizationTableSpec & 15] = tableData;\n            }\n            break;\n\n          case 0xFFC0: // SOF0 (Start of Frame, Baseline DCT)\n          case 0xFFC1: // SOF1 (Start of Frame, Extended DCT)\n          case 0xFFC2: // SOF2 (Start of Frame, Progressive DCT)\n            readUint16(); // skip data length\n            frame = {};\n            frame.extended = (fileMarker === 0xFFC1);\n            frame.progressive = (fileMarker === 0xFFC2);\n            frame.precision = data[offset++];\n            frame.scanLines = readUint16();\n            frame.samplesPerLine = readUint16();\n            frame.components = {};\n            frame.componentsOrder = [];\n\n            var pixelsInFrame = frame.scanLines * frame.samplesPerLine;\n            if (pixelsInFrame > maxResolutionInPixels) {\n              var exceededAmount = Math.ceil((pixelsInFrame - maxResolutionInPixels) / 1e6);\n              throw new Error(`maxResolutionInMP limit exceeded by ${exceededAmount}MP`);\n            }\n\n            var componentsCount = data[offset++], componentId;\n            var maxH = 0, maxV = 0;\n            for (i = 0; i < componentsCount; i++) {\n              componentId = data[offset];\n              var h = data[offset + 1] >> 4;\n              var v = data[offset + 1] & 15;\n              var qId = data[offset + 2];\n              frame.componentsOrder.push(componentId);\n              frame.components[componentId] = {\n                h: h,\n                v: v,\n                quantizationIdx: qId\n              };\n              offset += 3;\n            }\n            prepareComponents(frame);\n            frames.push(frame);\n            break;\n\n          case 0xFFC4: // DHT (Define Huffman Tables)\n            var huffmanLength = readUint16();\n            for (i = 2; i < huffmanLength;) {\n              var huffmanTableSpec = data[offset++];\n              var codeLengths = new Uint8Array(16);\n              var codeLengthSum = 0;\n              for (j = 0; j < 16; j++, offset++) {\n                codeLengthSum += (codeLengths[j] = data[offset]);\n              }\n              requestMemoryAllocation(16 + codeLengthSum);\n              var huffmanValues = new Uint8Array(codeLengthSum);\n              for (j = 0; j < codeLengthSum; j++, offset++)\n                huffmanValues[j] = data[offset];\n              i += 17 + codeLengthSum;\n\n              ((huffmanTableSpec >> 4) === 0 ?\n                huffmanTablesDC : huffmanTablesAC)[huffmanTableSpec & 15] =\n                buildHuffmanTable(codeLengths, huffmanValues);\n            }\n            break;\n\n          case 0xFFDD: // DRI (Define Restart Interval)\n            readUint16(); // skip data length\n            resetInterval = readUint16();\n            break;\n\n          case 0xFFDC: // Number of Lines marker\n            readUint16() // skip data length\n            readUint16() // Ignore this data since it represents the image height\n            break;\n            \n          case 0xFFDA: // SOS (Start of Scan)\n            var scanLength = readUint16();\n            var selectorsCount = data[offset++];\n            var components = [], component;\n            for (i = 0; i < selectorsCount; i++) {\n              component = frame.components[data[offset++]];\n              var tableSpec = data[offset++];\n              component.huffmanTableDC = huffmanTablesDC[tableSpec >> 4];\n              component.huffmanTableAC = huffmanTablesAC[tableSpec & 15];\n              components.push(component);\n            }\n            var spectralStart = data[offset++];\n            var spectralEnd = data[offset++];\n            var successiveApproximation = data[offset++];\n            var processed = decodeScan(data, offset,\n              frame, components, resetInterval,\n              spectralStart, spectralEnd,\n              successiveApproximation >> 4, successiveApproximation & 15, this.opts);\n            offset += processed;\n            break;\n\n          case 0xFFFF: // Fill bytes\n            if (data[offset] !== 0xFF) { // Avoid skipping a valid marker.\n              offset--;\n            }\n            break;\n\n          default:\n            if (data[offset - 3] == 0xFF &&\n                data[offset - 2] >= 0xC0 && data[offset - 2] <= 0xFE) {\n              // could be incorrect encoding -- last 0xFF byte of the previous\n              // block was eaten by the encoder\n              offset -= 3;\n              break;\n            }\n            throw new Error(\"unknown JPEG marker \" + fileMarker.toString(16));\n        }\n        fileMarker = readUint16();\n      }\n      if (frames.length != 1)\n        throw new Error(\"only single frame JPEGs supported\");\n\n      // set each frame's components quantization table\n      for (var i = 0; i < frames.length; i++) {\n        var cp = frames[i].components;\n        for (var j in cp) {\n          cp[j].quantizationTable = quantizationTables[cp[j].quantizationIdx];\n          delete cp[j].quantizationIdx;\n        }\n      }\n\n      this.width = frame.samplesPerLine;\n      this.height = frame.scanLines;\n      this.jfif = jfif;\n      this.adobe = adobe;\n      this.components = [];\n      for (var i = 0; i < frame.componentsOrder.length; i++) {\n        var component = frame.components[frame.componentsOrder[i]];\n        this.components.push({\n          lines: buildComponentData(frame, component),\n          scaleX: component.h / frame.maxH,\n          scaleY: component.v / frame.maxV\n        });\n      }\n    },\n    getData: function getData(width, height) {\n      var scaleX = this.width / width, scaleY = this.height / height;\n\n      var component1, component2, component3, component4;\n      var component1Line, component2Line, component3Line, component4Line;\n      var x, y;\n      var offset = 0;\n      var Y, Cb, Cr, K, C, M, Ye, R, G, B;\n      var colorTransform;\n      var dataLength = width * height * this.components.length;\n      requestMemoryAllocation(dataLength);\n      var data = new Uint8Array(dataLength);\n      switch (this.components.length) {\n        case 1:\n          component1 = this.components[0];\n          for (y = 0; y < height; y++) {\n            component1Line = component1.lines[0 | (y * component1.scaleY * scaleY)];\n            for (x = 0; x < width; x++) {\n              Y = component1Line[0 | (x * component1.scaleX * scaleX)];\n\n              data[offset++] = Y;\n            }\n          }\n          break;\n        case 2:\n          // PDF might compress two component data in custom colorspace\n          component1 = this.components[0];\n          component2 = this.components[1];\n          for (y = 0; y < height; y++) {\n            component1Line = component1.lines[0 | (y * component1.scaleY * scaleY)];\n            component2Line = component2.lines[0 | (y * component2.scaleY * scaleY)];\n            for (x = 0; x < width; x++) {\n              Y = component1Line[0 | (x * component1.scaleX * scaleX)];\n              data[offset++] = Y;\n              Y = component2Line[0 | (x * component2.scaleX * scaleX)];\n              data[offset++] = Y;\n            }\n          }\n          break;\n        case 3:\n          // The default transform for three components is true\n          colorTransform = true;\n          // The adobe transform marker overrides any previous setting\n          if (this.adobe && this.adobe.transformCode)\n            colorTransform = true;\n          else if (typeof this.opts.colorTransform !== 'undefined')\n            colorTransform = !!this.opts.colorTransform;\n\n          component1 = this.components[0];\n          component2 = this.components[1];\n          component3 = this.components[2];\n          for (y = 0; y < height; y++) {\n            component1Line = component1.lines[0 | (y * component1.scaleY * scaleY)];\n            component2Line = component2.lines[0 | (y * component2.scaleY * scaleY)];\n            component3Line = component3.lines[0 | (y * component3.scaleY * scaleY)];\n            for (x = 0; x < width; x++) {\n              if (!colorTransform) {\n                R = component1Line[0 | (x * component1.scaleX * scaleX)];\n                G = component2Line[0 | (x * component2.scaleX * scaleX)];\n                B = component3Line[0 | (x * component3.scaleX * scaleX)];\n              } else {\n                Y = component1Line[0 | (x * component1.scaleX * scaleX)];\n                Cb = component2Line[0 | (x * component2.scaleX * scaleX)];\n                Cr = component3Line[0 | (x * component3.scaleX * scaleX)];\n\n                R = clampTo8bit(Y + 1.402 * (Cr - 128));\n                G = clampTo8bit(Y - 0.3441363 * (Cb - 128) - 0.71413636 * (Cr - 128));\n                B = clampTo8bit(Y + 1.772 * (Cb - 128));\n              }\n\n              data[offset++] = R;\n              data[offset++] = G;\n              data[offset++] = B;\n            }\n          }\n          break;\n        case 4:\n          if (!this.adobe)\n            throw new Error('Unsupported color mode (4 components)');\n          // The default transform for four components is false\n          colorTransform = false;\n          // The adobe transform marker overrides any previous setting\n          if (this.adobe && this.adobe.transformCode)\n            colorTransform = true;\n          else if (typeof this.opts.colorTransform !== 'undefined')\n            colorTransform = !!this.opts.colorTransform;\n\n          component1 = this.components[0];\n          component2 = this.components[1];\n          component3 = this.components[2];\n          component4 = this.components[3];\n          for (y = 0; y < height; y++) {\n            component1Line = component1.lines[0 | (y * component1.scaleY * scaleY)];\n            component2Line = component2.lines[0 | (y * component2.scaleY * scaleY)];\n            component3Line = component3.lines[0 | (y * component3.scaleY * scaleY)];\n            component4Line = component4.lines[0 | (y * component4.scaleY * scaleY)];\n            for (x = 0; x < width; x++) {\n              if (!colorTransform) {\n                C = component1Line[0 | (x * component1.scaleX * scaleX)];\n                M = component2Line[0 | (x * component2.scaleX * scaleX)];\n                Ye = component3Line[0 | (x * component3.scaleX * scaleX)];\n                K = component4Line[0 | (x * component4.scaleX * scaleX)];\n              } else {\n                Y = component1Line[0 | (x * component1.scaleX * scaleX)];\n                Cb = component2Line[0 | (x * component2.scaleX * scaleX)];\n                Cr = component3Line[0 | (x * component3.scaleX * scaleX)];\n                K = component4Line[0 | (x * component4.scaleX * scaleX)];\n\n                C = 255 - clampTo8bit(Y + 1.402 * (Cr - 128));\n                M = 255 - clampTo8bit(Y - 0.3441363 * (Cb - 128) - 0.71413636 * (Cr - 128));\n                Ye = 255 - clampTo8bit(Y + 1.772 * (Cb - 128));\n              }\n              data[offset++] = 255-C;\n              data[offset++] = 255-M;\n              data[offset++] = 255-Ye;\n              data[offset++] = 255-K;\n            }\n          }\n          break;\n        default:\n          throw new Error('Unsupported color mode');\n      }\n      return data;\n    },\n    copyToImageData: function copyToImageData(imageData, formatAsRGBA) {\n      var width = imageData.width, height = imageData.height;\n      var imageDataArray = imageData.data;\n      var data = this.getData(width, height);\n      var i = 0, j = 0, x, y;\n      var Y, K, C, M, R, G, B;\n      switch (this.components.length) {\n        case 1:\n          for (y = 0; y < height; y++) {\n            for (x = 0; x < width; x++) {\n              Y = data[i++];\n\n              imageDataArray[j++] = Y;\n              imageDataArray[j++] = Y;\n              imageDataArray[j++] = Y;\n              if (formatAsRGBA) {\n                imageDataArray[j++] = 255;\n              }\n            }\n          }\n          break;\n        case 3:\n          for (y = 0; y < height; y++) {\n            for (x = 0; x < width; x++) {\n              R = data[i++];\n              G = data[i++];\n              B = data[i++];\n\n              imageDataArray[j++] = R;\n              imageDataArray[j++] = G;\n              imageDataArray[j++] = B;\n              if (formatAsRGBA) {\n                imageDataArray[j++] = 255;\n              }\n            }\n          }\n          break;\n        case 4:\n          for (y = 0; y < height; y++) {\n            for (x = 0; x < width; x++) {\n              C = data[i++];\n              M = data[i++];\n              Y = data[i++];\n              K = data[i++];\n\n              R = 255 - clampTo8bit(C * (1 - K / 255) + K);\n              G = 255 - clampTo8bit(M * (1 - K / 255) + K);\n              B = 255 - clampTo8bit(Y * (1 - K / 255) + K);\n\n              imageDataArray[j++] = R;\n              imageDataArray[j++] = G;\n              imageDataArray[j++] = B;\n              if (formatAsRGBA) {\n                imageDataArray[j++] = 255;\n              }\n            }\n          }\n          break;\n        default:\n          throw new Error('Unsupported color mode');\n      }\n    }\n  };\n\n\n  // We cap the amount of memory used by jpeg-js to avoid unexpected OOMs from untrusted content.\n  var totalBytesAllocated = 0;\n  var maxMemoryUsageBytes = 0;\n  function requestMemoryAllocation(increaseAmount = 0) {\n    var totalMemoryImpactBytes = totalBytesAllocated + increaseAmount;\n    if (totalMemoryImpactBytes > maxMemoryUsageBytes) {\n      var exceededAmount = Math.ceil((totalMemoryImpactBytes - maxMemoryUsageBytes) / 1024 / 1024);\n      throw new Error(`maxMemoryUsageInMB limit exceeded by at least ${exceededAmount}MB`);\n    }\n\n    totalBytesAllocated = totalMemoryImpactBytes;\n  }\n\n  constructor.resetMaxMemoryUsage = function (maxMemoryUsageBytes_) {\n    totalBytesAllocated = 0;\n    maxMemoryUsageBytes = maxMemoryUsageBytes_;\n  };\n\n  constructor.getBytesAllocated = function () {\n    return totalBytesAllocated;\n  };\n\n  constructor.requestMemoryAllocation = requestMemoryAllocation;\n\n  return constructor;\n})();\n\nif (typeof module !== 'undefined') {\n\tmodule.exports = decode;\n} else if (typeof window !== 'undefined') {\n\twindow['jpeg-js'] = window['jpeg-js'] || {};\n\twindow['jpeg-js'].decode = decode;\n}\n\nfunction decode(jpegData, userOpts = {}) {\n  var defaultOpts = {\n    // \"undefined\" means \"Choose whether to transform colors based on the image’s color model.\"\n    colorTransform: undefined,\n    useTArray: false,\n    formatAsRGBA: true,\n    tolerantDecoding: true,\n    maxResolutionInMP: 100, // Don't decode more than 100 megapixels\n    maxMemoryUsageInMB: 512, // Don't decode if memory footprint is more than 512MB\n  };\n\n  var opts = {...defaultOpts, ...userOpts};\n  var arr = new Uint8Array(jpegData);\n  var decoder = new JpegImage();\n  decoder.opts = opts;\n  // If this constructor ever supports async decoding this will need to be done differently.\n  // Until then, treating as singleton limit is fine.\n  JpegImage.resetMaxMemoryUsage(opts.maxMemoryUsageInMB * 1024 * 1024);\n  decoder.parse(arr);\n\n  var channels = (opts.formatAsRGBA) ? 4 : 3;\n  var bytesNeeded = decoder.width * decoder.height * channels;\n  try {\n    JpegImage.requestMemoryAllocation(bytesNeeded);\n    var image = {\n      width: decoder.width,\n      height: decoder.height,\n      exifBuffer: decoder.exifBuffer,\n      data: opts.useTArray ?\n        new Uint8Array(bytesNeeded) :\n        Buffer.alloc(bytesNeeded)\n    };\n    if(decoder.comments.length > 0) {\n      image[\"comments\"] = decoder.comments;\n    }\n  } catch (err){\n    if (err instanceof RangeError){\n      throw new Error(\"Could not allocate enough memory for the image. \" +\n                      \"Required: \" + bytesNeeded);\n    } else {\n      throw err;\n    }\n  }\n\n  decoder.copyToImageData(image, opts.formatAsRGBA);\n\n  return image;\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":173,"column":0},"generated":{"line":174,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":174,"column":0},"generated":{"line":175,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":175,"column":0},"generated":{"line":176,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":176,"column":0},"generated":{"line":177,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":177,"column":0},"generated":{"line":178,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":178,"column":0},"generated":{"line":179,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":179,"column":0},"generated":{"line":180,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":180,"column":0},"generated":{"line":181,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":181,"column":0},"generated":{"line":182,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":182,"column":0},"generated":{"line":183,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":183,"column":0},"generated":{"line":184,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":184,"column":0},"generated":{"line":185,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":185,"column":0},"generated":{"line":186,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":186,"column":0},"generated":{"line":187,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":187,"column":0},"generated":{"line":188,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":188,"column":0},"generated":{"line":189,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":189,"column":0},"generated":{"line":190,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":190,"column":0},"generated":{"line":191,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":191,"column":0},"generated":{"line":192,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":192,"column":0},"generated":{"line":193,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":193,"column":0},"generated":{"line":194,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":194,"column":0},"generated":{"line":195,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":195,"column":0},"generated":{"line":196,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":196,"column":0},"generated":{"line":197,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":197,"column":0},"generated":{"line":198,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":198,"column":0},"generated":{"line":199,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":199,"column":0},"generated":{"line":200,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":200,"column":0},"generated":{"line":201,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":201,"column":0},"generated":{"line":202,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":202,"column":0},"generated":{"line":203,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":203,"column":0},"generated":{"line":204,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":204,"column":0},"generated":{"line":205,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":205,"column":0},"generated":{"line":206,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":206,"column":0},"generated":{"line":207,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":207,"column":0},"generated":{"line":208,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":208,"column":0},"generated":{"line":209,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":209,"column":0},"generated":{"line":210,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":210,"column":0},"generated":{"line":211,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":211,"column":0},"generated":{"line":212,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":212,"column":0},"generated":{"line":213,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":213,"column":0},"generated":{"line":214,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":214,"column":0},"generated":{"line":215,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":215,"column":0},"generated":{"line":216,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":216,"column":0},"generated":{"line":217,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":217,"column":0},"generated":{"line":218,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":218,"column":0},"generated":{"line":219,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":219,"column":0},"generated":{"line":220,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":220,"column":0},"generated":{"line":221,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":221,"column":0},"generated":{"line":222,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":222,"column":0},"generated":{"line":223,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":223,"column":0},"generated":{"line":224,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":224,"column":0},"generated":{"line":225,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":225,"column":0},"generated":{"line":226,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":226,"column":0},"generated":{"line":227,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":227,"column":0},"generated":{"line":228,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":228,"column":0},"generated":{"line":229,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":229,"column":0},"generated":{"line":230,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":230,"column":0},"generated":{"line":231,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":231,"column":0},"generated":{"line":232,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":232,"column":0},"generated":{"line":233,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":233,"column":0},"generated":{"line":234,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":234,"column":0},"generated":{"line":235,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":235,"column":0},"generated":{"line":236,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":236,"column":0},"generated":{"line":237,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":237,"column":0},"generated":{"line":238,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":238,"column":0},"generated":{"line":239,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":239,"column":0},"generated":{"line":240,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":240,"column":0},"generated":{"line":241,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":241,"column":0},"generated":{"line":242,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":242,"column":0},"generated":{"line":243,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":243,"column":0},"generated":{"line":244,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":244,"column":0},"generated":{"line":245,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":245,"column":0},"generated":{"line":246,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":246,"column":0},"generated":{"line":247,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":247,"column":0},"generated":{"line":248,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":248,"column":0},"generated":{"line":249,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":249,"column":0},"generated":{"line":250,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":250,"column":0},"generated":{"line":251,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":251,"column":0},"generated":{"line":252,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":252,"column":0},"generated":{"line":253,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":253,"column":0},"generated":{"line":254,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":254,"column":0},"generated":{"line":255,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":255,"column":0},"generated":{"line":256,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":256,"column":0},"generated":{"line":257,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":257,"column":0},"generated":{"line":258,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":258,"column":0},"generated":{"line":259,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":259,"column":0},"generated":{"line":260,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":260,"column":0},"generated":{"line":261,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":261,"column":0},"generated":{"line":262,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":262,"column":0},"generated":{"line":263,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":263,"column":0},"generated":{"line":264,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":264,"column":0},"generated":{"line":265,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":265,"column":0},"generated":{"line":266,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":266,"column":0},"generated":{"line":267,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":267,"column":0},"generated":{"line":268,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":268,"column":0},"generated":{"line":269,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":269,"column":0},"generated":{"line":270,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":270,"column":0},"generated":{"line":271,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":271,"column":0},"generated":{"line":272,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":272,"column":0},"generated":{"line":273,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":273,"column":0},"generated":{"line":274,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":274,"column":0},"generated":{"line":275,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":275,"column":0},"generated":{"line":276,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":276,"column":0},"generated":{"line":277,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":277,"column":0},"generated":{"line":278,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":278,"column":0},"generated":{"line":279,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":279,"column":0},"generated":{"line":280,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":280,"column":0},"generated":{"line":281,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":281,"column":0},"generated":{"line":282,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":282,"column":0},"generated":{"line":283,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":283,"column":0},"generated":{"line":284,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":284,"column":0},"generated":{"line":285,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":285,"column":0},"generated":{"line":286,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":286,"column":0},"generated":{"line":287,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":287,"column":0},"generated":{"line":288,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":288,"column":0},"generated":{"line":289,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":289,"column":0},"generated":{"line":290,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":290,"column":0},"generated":{"line":291,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":291,"column":0},"generated":{"line":292,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":292,"column":0},"generated":{"line":293,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":293,"column":0},"generated":{"line":294,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":294,"column":0},"generated":{"line":295,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":295,"column":0},"generated":{"line":296,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":296,"column":0},"generated":{"line":297,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":297,"column":0},"generated":{"line":298,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":298,"column":0},"generated":{"line":299,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":299,"column":0},"generated":{"line":300,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":300,"column":0},"generated":{"line":301,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":301,"column":0},"generated":{"line":302,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":302,"column":0},"generated":{"line":303,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":303,"column":0},"generated":{"line":304,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":304,"column":0},"generated":{"line":305,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":305,"column":0},"generated":{"line":306,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":306,"column":0},"generated":{"line":307,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":307,"column":0},"generated":{"line":308,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":308,"column":0},"generated":{"line":309,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":309,"column":0},"generated":{"line":310,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":310,"column":0},"generated":{"line":311,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":311,"column":0},"generated":{"line":312,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":312,"column":0},"generated":{"line":313,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":313,"column":0},"generated":{"line":314,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":314,"column":0},"generated":{"line":315,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":315,"column":0},"generated":{"line":316,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":316,"column":0},"generated":{"line":317,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":317,"column":0},"generated":{"line":318,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":318,"column":0},"generated":{"line":319,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":319,"column":0},"generated":{"line":320,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":320,"column":0},"generated":{"line":321,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":321,"column":0},"generated":{"line":322,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":322,"column":0},"generated":{"line":323,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":323,"column":0},"generated":{"line":324,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":324,"column":0},"generated":{"line":325,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":325,"column":0},"generated":{"line":326,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":326,"column":0},"generated":{"line":327,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":327,"column":0},"generated":{"line":328,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":328,"column":0},"generated":{"line":329,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":329,"column":0},"generated":{"line":330,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":330,"column":0},"generated":{"line":331,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":331,"column":0},"generated":{"line":332,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":332,"column":0},"generated":{"line":333,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":333,"column":0},"generated":{"line":334,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":334,"column":0},"generated":{"line":335,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":335,"column":0},"generated":{"line":336,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":336,"column":0},"generated":{"line":337,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":337,"column":0},"generated":{"line":338,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":338,"column":0},"generated":{"line":339,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":339,"column":0},"generated":{"line":340,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":340,"column":0},"generated":{"line":341,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":341,"column":0},"generated":{"line":342,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":342,"column":0},"generated":{"line":343,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":343,"column":0},"generated":{"line":344,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":344,"column":0},"generated":{"line":345,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":345,"column":0},"generated":{"line":346,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":346,"column":0},"generated":{"line":347,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":347,"column":0},"generated":{"line":348,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":348,"column":0},"generated":{"line":349,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":349,"column":0},"generated":{"line":350,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":350,"column":0},"generated":{"line":351,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":351,"column":0},"generated":{"line":352,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":352,"column":0},"generated":{"line":353,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":353,"column":0},"generated":{"line":354,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":354,"column":0},"generated":{"line":355,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":355,"column":0},"generated":{"line":356,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":356,"column":0},"generated":{"line":357,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":357,"column":0},"generated":{"line":358,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":358,"column":0},"generated":{"line":359,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":359,"column":0},"generated":{"line":360,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":360,"column":0},"generated":{"line":361,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":361,"column":0},"generated":{"line":362,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":362,"column":0},"generated":{"line":363,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":363,"column":0},"generated":{"line":364,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":364,"column":0},"generated":{"line":365,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":365,"column":0},"generated":{"line":366,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":366,"column":0},"generated":{"line":367,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":367,"column":0},"generated":{"line":368,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":368,"column":0},"generated":{"line":369,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":369,"column":0},"generated":{"line":370,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":370,"column":0},"generated":{"line":371,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":371,"column":0},"generated":{"line":372,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":372,"column":0},"generated":{"line":373,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":373,"column":0},"generated":{"line":374,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":374,"column":0},"generated":{"line":375,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":375,"column":0},"generated":{"line":376,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":376,"column":0},"generated":{"line":377,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":377,"column":0},"generated":{"line":378,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":378,"column":0},"generated":{"line":379,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":379,"column":0},"generated":{"line":380,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":380,"column":0},"generated":{"line":381,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":381,"column":0},"generated":{"line":382,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":382,"column":0},"generated":{"line":383,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":383,"column":0},"generated":{"line":384,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":384,"column":0},"generated":{"line":385,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":385,"column":0},"generated":{"line":386,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":386,"column":0},"generated":{"line":387,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":387,"column":0},"generated":{"line":388,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":388,"column":0},"generated":{"line":389,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":389,"column":0},"generated":{"line":390,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":390,"column":0},"generated":{"line":391,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":391,"column":0},"generated":{"line":392,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":392,"column":0},"generated":{"line":393,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":393,"column":0},"generated":{"line":394,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":394,"column":0},"generated":{"line":395,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":395,"column":0},"generated":{"line":396,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":396,"column":0},"generated":{"line":397,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":397,"column":0},"generated":{"line":398,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":398,"column":0},"generated":{"line":399,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":399,"column":0},"generated":{"line":400,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":400,"column":0},"generated":{"line":401,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":401,"column":0},"generated":{"line":402,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":402,"column":0},"generated":{"line":403,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":403,"column":0},"generated":{"line":404,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":404,"column":0},"generated":{"line":405,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":405,"column":0},"generated":{"line":406,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":406,"column":0},"generated":{"line":407,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":407,"column":0},"generated":{"line":408,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":408,"column":0},"generated":{"line":409,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":409,"column":0},"generated":{"line":410,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":410,"column":0},"generated":{"line":411,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":411,"column":0},"generated":{"line":412,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":412,"column":0},"generated":{"line":413,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":413,"column":0},"generated":{"line":414,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":414,"column":0},"generated":{"line":415,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":415,"column":0},"generated":{"line":416,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":416,"column":0},"generated":{"line":417,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":417,"column":0},"generated":{"line":418,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":418,"column":0},"generated":{"line":419,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":419,"column":0},"generated":{"line":420,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":420,"column":0},"generated":{"line":421,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":421,"column":0},"generated":{"line":422,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":422,"column":0},"generated":{"line":423,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":423,"column":0},"generated":{"line":424,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":424,"column":0},"generated":{"line":425,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":425,"column":0},"generated":{"line":426,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":426,"column":0},"generated":{"line":427,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":427,"column":0},"generated":{"line":428,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":428,"column":0},"generated":{"line":429,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":429,"column":0},"generated":{"line":430,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":430,"column":0},"generated":{"line":431,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":431,"column":0},"generated":{"line":432,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":432,"column":0},"generated":{"line":433,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":433,"column":0},"generated":{"line":434,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":434,"column":0},"generated":{"line":435,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":435,"column":0},"generated":{"line":436,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":436,"column":0},"generated":{"line":437,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":437,"column":0},"generated":{"line":438,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":438,"column":0},"generated":{"line":439,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":439,"column":0},"generated":{"line":440,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":440,"column":0},"generated":{"line":441,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":441,"column":0},"generated":{"line":442,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":442,"column":0},"generated":{"line":443,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":443,"column":0},"generated":{"line":444,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":444,"column":0},"generated":{"line":445,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":445,"column":0},"generated":{"line":446,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":446,"column":0},"generated":{"line":447,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":447,"column":0},"generated":{"line":448,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":448,"column":0},"generated":{"line":449,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":449,"column":0},"generated":{"line":450,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":450,"column":0},"generated":{"line":451,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":451,"column":0},"generated":{"line":452,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":452,"column":0},"generated":{"line":453,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":453,"column":0},"generated":{"line":454,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":454,"column":0},"generated":{"line":455,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":455,"column":0},"generated":{"line":456,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":456,"column":0},"generated":{"line":457,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":457,"column":0},"generated":{"line":458,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":458,"column":0},"generated":{"line":459,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":459,"column":0},"generated":{"line":460,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":460,"column":0},"generated":{"line":461,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":461,"column":0},"generated":{"line":462,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":462,"column":0},"generated":{"line":463,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":463,"column":0},"generated":{"line":464,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":464,"column":0},"generated":{"line":465,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":465,"column":0},"generated":{"line":466,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":466,"column":0},"generated":{"line":467,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":467,"column":0},"generated":{"line":468,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":468,"column":0},"generated":{"line":469,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":469,"column":0},"generated":{"line":470,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":470,"column":0},"generated":{"line":471,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":471,"column":0},"generated":{"line":472,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":472,"column":0},"generated":{"line":473,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":473,"column":0},"generated":{"line":474,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":474,"column":0},"generated":{"line":475,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":475,"column":0},"generated":{"line":476,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":476,"column":0},"generated":{"line":477,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":477,"column":0},"generated":{"line":478,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":478,"column":0},"generated":{"line":479,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":479,"column":0},"generated":{"line":480,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":480,"column":0},"generated":{"line":481,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":481,"column":0},"generated":{"line":482,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":482,"column":0},"generated":{"line":483,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":483,"column":0},"generated":{"line":484,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":484,"column":0},"generated":{"line":485,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":485,"column":0},"generated":{"line":486,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":486,"column":0},"generated":{"line":487,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":487,"column":0},"generated":{"line":488,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":488,"column":0},"generated":{"line":489,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":489,"column":0},"generated":{"line":490,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":490,"column":0},"generated":{"line":491,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":491,"column":0},"generated":{"line":492,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":492,"column":0},"generated":{"line":493,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":493,"column":0},"generated":{"line":494,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":494,"column":0},"generated":{"line":495,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":495,"column":0},"generated":{"line":496,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":496,"column":0},"generated":{"line":497,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":497,"column":0},"generated":{"line":498,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":498,"column":0},"generated":{"line":499,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":499,"column":0},"generated":{"line":500,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":500,"column":0},"generated":{"line":501,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":501,"column":0},"generated":{"line":502,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":502,"column":0},"generated":{"line":503,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":503,"column":0},"generated":{"line":504,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":504,"column":0},"generated":{"line":505,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":505,"column":0},"generated":{"line":506,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":506,"column":0},"generated":{"line":507,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":507,"column":0},"generated":{"line":508,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":508,"column":0},"generated":{"line":509,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":509,"column":0},"generated":{"line":510,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":510,"column":0},"generated":{"line":511,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":511,"column":0},"generated":{"line":512,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":512,"column":0},"generated":{"line":513,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":513,"column":0},"generated":{"line":514,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":514,"column":0},"generated":{"line":515,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":515,"column":0},"generated":{"line":516,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":516,"column":0},"generated":{"line":517,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":517,"column":0},"generated":{"line":518,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":518,"column":0},"generated":{"line":519,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":519,"column":0},"generated":{"line":520,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":520,"column":0},"generated":{"line":521,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":521,"column":0},"generated":{"line":522,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":522,"column":0},"generated":{"line":523,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":523,"column":0},"generated":{"line":524,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":524,"column":0},"generated":{"line":525,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":525,"column":0},"generated":{"line":526,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":526,"column":0},"generated":{"line":527,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":527,"column":0},"generated":{"line":528,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":528,"column":0},"generated":{"line":529,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":529,"column":0},"generated":{"line":530,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":530,"column":0},"generated":{"line":531,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":531,"column":0},"generated":{"line":532,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":532,"column":0},"generated":{"line":533,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":533,"column":0},"generated":{"line":534,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":534,"column":0},"generated":{"line":535,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":535,"column":0},"generated":{"line":536,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":536,"column":0},"generated":{"line":537,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":537,"column":0},"generated":{"line":538,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":538,"column":0},"generated":{"line":539,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":539,"column":0},"generated":{"line":540,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":540,"column":0},"generated":{"line":541,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":541,"column":0},"generated":{"line":542,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":542,"column":0},"generated":{"line":543,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":543,"column":0},"generated":{"line":544,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":544,"column":0},"generated":{"line":545,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":545,"column":0},"generated":{"line":546,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":546,"column":0},"generated":{"line":547,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":547,"column":0},"generated":{"line":548,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":548,"column":0},"generated":{"line":549,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":549,"column":0},"generated":{"line":550,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":550,"column":0},"generated":{"line":551,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":551,"column":0},"generated":{"line":552,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":552,"column":0},"generated":{"line":553,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":553,"column":0},"generated":{"line":554,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":554,"column":0},"generated":{"line":555,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":555,"column":0},"generated":{"line":556,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":556,"column":0},"generated":{"line":557,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":557,"column":0},"generated":{"line":558,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":558,"column":0},"generated":{"line":559,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":559,"column":0},"generated":{"line":560,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":560,"column":0},"generated":{"line":561,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":561,"column":0},"generated":{"line":562,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":562,"column":0},"generated":{"line":563,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":563,"column":0},"generated":{"line":564,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":564,"column":0},"generated":{"line":565,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":565,"column":0},"generated":{"line":566,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":566,"column":0},"generated":{"line":567,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":567,"column":0},"generated":{"line":568,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":568,"column":0},"generated":{"line":569,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":569,"column":0},"generated":{"line":570,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":570,"column":0},"generated":{"line":571,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":571,"column":0},"generated":{"line":572,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":572,"column":0},"generated":{"line":573,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":573,"column":0},"generated":{"line":574,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":574,"column":0},"generated":{"line":575,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":575,"column":0},"generated":{"line":576,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":576,"column":0},"generated":{"line":577,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":577,"column":0},"generated":{"line":578,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":578,"column":0},"generated":{"line":579,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":579,"column":0},"generated":{"line":580,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":580,"column":0},"generated":{"line":581,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":581,"column":0},"generated":{"line":582,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":582,"column":0},"generated":{"line":583,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":583,"column":0},"generated":{"line":584,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":584,"column":0},"generated":{"line":585,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":585,"column":0},"generated":{"line":586,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":586,"column":0},"generated":{"line":587,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":587,"column":0},"generated":{"line":588,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":588,"column":0},"generated":{"line":589,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":589,"column":0},"generated":{"line":590,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":590,"column":0},"generated":{"line":591,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":591,"column":0},"generated":{"line":592,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":592,"column":0},"generated":{"line":593,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":593,"column":0},"generated":{"line":594,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":594,"column":0},"generated":{"line":595,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":595,"column":0},"generated":{"line":596,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":596,"column":0},"generated":{"line":597,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":597,"column":0},"generated":{"line":598,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":598,"column":0},"generated":{"line":599,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":599,"column":0},"generated":{"line":600,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":600,"column":0},"generated":{"line":601,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":601,"column":0},"generated":{"line":602,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":602,"column":0},"generated":{"line":603,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":603,"column":0},"generated":{"line":604,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":604,"column":0},"generated":{"line":605,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":605,"column":0},"generated":{"line":606,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":606,"column":0},"generated":{"line":607,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":607,"column":0},"generated":{"line":608,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":608,"column":0},"generated":{"line":609,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":609,"column":0},"generated":{"line":610,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":610,"column":0},"generated":{"line":611,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":611,"column":0},"generated":{"line":612,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":612,"column":0},"generated":{"line":613,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":613,"column":0},"generated":{"line":614,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":614,"column":0},"generated":{"line":615,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":615,"column":0},"generated":{"line":616,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":616,"column":0},"generated":{"line":617,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":617,"column":0},"generated":{"line":618,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":618,"column":0},"generated":{"line":619,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":619,"column":0},"generated":{"line":620,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":620,"column":0},"generated":{"line":621,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":621,"column":0},"generated":{"line":622,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":622,"column":0},"generated":{"line":623,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":623,"column":0},"generated":{"line":624,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":624,"column":0},"generated":{"line":625,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":625,"column":0},"generated":{"line":626,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":626,"column":0},"generated":{"line":627,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":627,"column":0},"generated":{"line":628,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":628,"column":0},"generated":{"line":629,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":629,"column":0},"generated":{"line":630,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":630,"column":0},"generated":{"line":631,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":631,"column":0},"generated":{"line":632,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":632,"column":0},"generated":{"line":633,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":633,"column":0},"generated":{"line":634,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":634,"column":0},"generated":{"line":635,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":635,"column":0},"generated":{"line":636,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":636,"column":0},"generated":{"line":637,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":637,"column":0},"generated":{"line":638,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":638,"column":0},"generated":{"line":639,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":639,"column":0},"generated":{"line":640,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":640,"column":0},"generated":{"line":641,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":641,"column":0},"generated":{"line":642,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":642,"column":0},"generated":{"line":643,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":643,"column":0},"generated":{"line":644,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":644,"column":0},"generated":{"line":645,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":645,"column":0},"generated":{"line":646,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":646,"column":0},"generated":{"line":647,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":647,"column":0},"generated":{"line":648,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":648,"column":0},"generated":{"line":649,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":649,"column":0},"generated":{"line":650,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":650,"column":0},"generated":{"line":651,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":651,"column":0},"generated":{"line":652,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":652,"column":0},"generated":{"line":653,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":653,"column":0},"generated":{"line":654,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":654,"column":0},"generated":{"line":655,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":655,"column":0},"generated":{"line":656,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":656,"column":0},"generated":{"line":657,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":657,"column":0},"generated":{"line":658,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":658,"column":0},"generated":{"line":659,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":659,"column":0},"generated":{"line":660,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":660,"column":0},"generated":{"line":661,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":661,"column":0},"generated":{"line":662,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":662,"column":0},"generated":{"line":663,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":663,"column":0},"generated":{"line":664,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":664,"column":0},"generated":{"line":665,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":665,"column":0},"generated":{"line":666,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":666,"column":0},"generated":{"line":667,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":667,"column":0},"generated":{"line":668,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":668,"column":0},"generated":{"line":669,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":669,"column":0},"generated":{"line":670,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":670,"column":0},"generated":{"line":671,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":671,"column":0},"generated":{"line":672,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":672,"column":0},"generated":{"line":673,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":673,"column":0},"generated":{"line":674,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":674,"column":0},"generated":{"line":675,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":675,"column":0},"generated":{"line":676,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":676,"column":0},"generated":{"line":677,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":677,"column":0},"generated":{"line":678,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":678,"column":0},"generated":{"line":679,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":679,"column":0},"generated":{"line":680,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":680,"column":0},"generated":{"line":681,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":681,"column":0},"generated":{"line":682,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":682,"column":0},"generated":{"line":683,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":683,"column":0},"generated":{"line":684,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":684,"column":0},"generated":{"line":685,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":685,"column":0},"generated":{"line":686,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":686,"column":0},"generated":{"line":687,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":687,"column":0},"generated":{"line":688,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":688,"column":0},"generated":{"line":689,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":689,"column":0},"generated":{"line":690,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":690,"column":0},"generated":{"line":691,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":691,"column":0},"generated":{"line":692,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":692,"column":0},"generated":{"line":693,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":693,"column":0},"generated":{"line":694,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":694,"column":0},"generated":{"line":695,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":695,"column":0},"generated":{"line":696,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":696,"column":0},"generated":{"line":697,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":697,"column":0},"generated":{"line":698,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":698,"column":0},"generated":{"line":699,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":699,"column":0},"generated":{"line":700,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":700,"column":0},"generated":{"line":701,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":701,"column":0},"generated":{"line":702,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":702,"column":0},"generated":{"line":703,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":703,"column":0},"generated":{"line":704,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":704,"column":0},"generated":{"line":705,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":705,"column":0},"generated":{"line":706,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":706,"column":0},"generated":{"line":707,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":707,"column":0},"generated":{"line":708,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":708,"column":0},"generated":{"line":709,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":709,"column":0},"generated":{"line":710,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":710,"column":0},"generated":{"line":711,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":711,"column":0},"generated":{"line":712,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":712,"column":0},"generated":{"line":713,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":713,"column":0},"generated":{"line":714,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":714,"column":0},"generated":{"line":715,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":715,"column":0},"generated":{"line":716,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":716,"column":0},"generated":{"line":717,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":717,"column":0},"generated":{"line":718,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":718,"column":0},"generated":{"line":719,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":719,"column":0},"generated":{"line":720,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":720,"column":0},"generated":{"line":721,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":721,"column":0},"generated":{"line":722,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":722,"column":0},"generated":{"line":723,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":723,"column":0},"generated":{"line":724,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":724,"column":0},"generated":{"line":725,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":725,"column":0},"generated":{"line":726,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":726,"column":0},"generated":{"line":727,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":727,"column":0},"generated":{"line":728,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":728,"column":0},"generated":{"line":729,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":729,"column":0},"generated":{"line":730,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":730,"column":0},"generated":{"line":731,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":731,"column":0},"generated":{"line":732,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":732,"column":0},"generated":{"line":733,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":733,"column":0},"generated":{"line":734,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":734,"column":0},"generated":{"line":735,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":735,"column":0},"generated":{"line":736,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":736,"column":0},"generated":{"line":737,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":737,"column":0},"generated":{"line":738,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":738,"column":0},"generated":{"line":739,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":739,"column":0},"generated":{"line":740,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":740,"column":0},"generated":{"line":741,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":741,"column":0},"generated":{"line":742,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":742,"column":0},"generated":{"line":743,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":743,"column":0},"generated":{"line":744,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":744,"column":0},"generated":{"line":745,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":745,"column":0},"generated":{"line":746,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":746,"column":0},"generated":{"line":747,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":747,"column":0},"generated":{"line":748,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":748,"column":0},"generated":{"line":749,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":749,"column":0},"generated":{"line":750,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":750,"column":0},"generated":{"line":751,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":751,"column":0},"generated":{"line":752,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":752,"column":0},"generated":{"line":753,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":753,"column":0},"generated":{"line":754,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":754,"column":0},"generated":{"line":755,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":755,"column":0},"generated":{"line":756,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":756,"column":0},"generated":{"line":757,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":757,"column":0},"generated":{"line":758,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":758,"column":0},"generated":{"line":759,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":759,"column":0},"generated":{"line":760,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":760,"column":0},"generated":{"line":761,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":761,"column":0},"generated":{"line":762,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":762,"column":0},"generated":{"line":763,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":763,"column":0},"generated":{"line":764,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":764,"column":0},"generated":{"line":765,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":765,"column":0},"generated":{"line":766,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":766,"column":0},"generated":{"line":767,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":767,"column":0},"generated":{"line":768,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":768,"column":0},"generated":{"line":769,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":769,"column":0},"generated":{"line":770,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":770,"column":0},"generated":{"line":771,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":771,"column":0},"generated":{"line":772,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":772,"column":0},"generated":{"line":773,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":773,"column":0},"generated":{"line":774,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":774,"column":0},"generated":{"line":775,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":775,"column":0},"generated":{"line":776,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":776,"column":0},"generated":{"line":777,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":777,"column":0},"generated":{"line":778,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":778,"column":0},"generated":{"line":779,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":779,"column":0},"generated":{"line":780,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":780,"column":0},"generated":{"line":781,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":781,"column":0},"generated":{"line":782,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":782,"column":0},"generated":{"line":783,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":783,"column":0},"generated":{"line":784,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":784,"column":0},"generated":{"line":785,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":785,"column":0},"generated":{"line":786,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":786,"column":0},"generated":{"line":787,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":787,"column":0},"generated":{"line":788,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":788,"column":0},"generated":{"line":789,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":789,"column":0},"generated":{"line":790,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":790,"column":0},"generated":{"line":791,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":791,"column":0},"generated":{"line":792,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":792,"column":0},"generated":{"line":793,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":793,"column":0},"generated":{"line":794,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":794,"column":0},"generated":{"line":795,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":795,"column":0},"generated":{"line":796,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":796,"column":0},"generated":{"line":797,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":797,"column":0},"generated":{"line":798,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":798,"column":0},"generated":{"line":799,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":799,"column":0},"generated":{"line":800,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":800,"column":0},"generated":{"line":801,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":801,"column":0},"generated":{"line":802,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":802,"column":0},"generated":{"line":803,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":803,"column":0},"generated":{"line":804,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":804,"column":0},"generated":{"line":805,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":805,"column":0},"generated":{"line":806,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":806,"column":0},"generated":{"line":807,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":807,"column":0},"generated":{"line":808,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":808,"column":0},"generated":{"line":809,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":809,"column":0},"generated":{"line":810,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":810,"column":0},"generated":{"line":811,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":811,"column":0},"generated":{"line":812,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":812,"column":0},"generated":{"line":813,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":813,"column":0},"generated":{"line":814,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":814,"column":0},"generated":{"line":815,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":815,"column":0},"generated":{"line":816,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":816,"column":0},"generated":{"line":817,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":817,"column":0},"generated":{"line":818,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":818,"column":0},"generated":{"line":819,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":819,"column":0},"generated":{"line":820,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":820,"column":0},"generated":{"line":821,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":821,"column":0},"generated":{"line":822,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":822,"column":0},"generated":{"line":823,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":823,"column":0},"generated":{"line":824,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":824,"column":0},"generated":{"line":825,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":825,"column":0},"generated":{"line":826,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":826,"column":0},"generated":{"line":827,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":827,"column":0},"generated":{"line":828,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":828,"column":0},"generated":{"line":829,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":829,"column":0},"generated":{"line":830,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":830,"column":0},"generated":{"line":831,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":831,"column":0},"generated":{"line":832,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":832,"column":0},"generated":{"line":833,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":833,"column":0},"generated":{"line":834,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":834,"column":0},"generated":{"line":835,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":835,"column":0},"generated":{"line":836,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":836,"column":0},"generated":{"line":837,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":837,"column":0},"generated":{"line":838,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":838,"column":0},"generated":{"line":839,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":839,"column":0},"generated":{"line":840,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":840,"column":0},"generated":{"line":841,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":841,"column":0},"generated":{"line":842,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":842,"column":0},"generated":{"line":843,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":843,"column":0},"generated":{"line":844,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":844,"column":0},"generated":{"line":845,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":845,"column":0},"generated":{"line":846,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":846,"column":0},"generated":{"line":847,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":847,"column":0},"generated":{"line":848,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":848,"column":0},"generated":{"line":849,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":849,"column":0},"generated":{"line":850,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":850,"column":0},"generated":{"line":851,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":851,"column":0},"generated":{"line":852,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":852,"column":0},"generated":{"line":853,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":853,"column":0},"generated":{"line":854,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":854,"column":0},"generated":{"line":855,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":855,"column":0},"generated":{"line":856,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":856,"column":0},"generated":{"line":857,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":857,"column":0},"generated":{"line":858,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":858,"column":0},"generated":{"line":859,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":859,"column":0},"generated":{"line":860,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":860,"column":0},"generated":{"line":861,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":861,"column":0},"generated":{"line":862,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":862,"column":0},"generated":{"line":863,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":863,"column":0},"generated":{"line":864,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":864,"column":0},"generated":{"line":865,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":865,"column":0},"generated":{"line":866,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":866,"column":0},"generated":{"line":867,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":867,"column":0},"generated":{"line":868,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":868,"column":0},"generated":{"line":869,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":869,"column":0},"generated":{"line":870,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":870,"column":0},"generated":{"line":871,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":871,"column":0},"generated":{"line":872,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":872,"column":0},"generated":{"line":873,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":873,"column":0},"generated":{"line":874,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":874,"column":0},"generated":{"line":875,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":875,"column":0},"generated":{"line":876,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":876,"column":0},"generated":{"line":877,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":877,"column":0},"generated":{"line":878,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":878,"column":0},"generated":{"line":879,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":879,"column":0},"generated":{"line":880,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":880,"column":0},"generated":{"line":881,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":881,"column":0},"generated":{"line":882,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":882,"column":0},"generated":{"line":883,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":883,"column":0},"generated":{"line":884,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":884,"column":0},"generated":{"line":885,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":885,"column":0},"generated":{"line":886,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":886,"column":0},"generated":{"line":887,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":887,"column":0},"generated":{"line":888,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":888,"column":0},"generated":{"line":889,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":889,"column":0},"generated":{"line":890,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":890,"column":0},"generated":{"line":891,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":891,"column":0},"generated":{"line":892,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":892,"column":0},"generated":{"line":893,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":893,"column":0},"generated":{"line":894,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":894,"column":0},"generated":{"line":895,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":895,"column":0},"generated":{"line":896,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":896,"column":0},"generated":{"line":897,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":897,"column":0},"generated":{"line":898,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":898,"column":0},"generated":{"line":899,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":899,"column":0},"generated":{"line":900,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":900,"column":0},"generated":{"line":901,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":901,"column":0},"generated":{"line":902,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":902,"column":0},"generated":{"line":903,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":903,"column":0},"generated":{"line":904,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":904,"column":0},"generated":{"line":905,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":905,"column":0},"generated":{"line":906,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":906,"column":0},"generated":{"line":907,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":907,"column":0},"generated":{"line":908,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":908,"column":0},"generated":{"line":909,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":909,"column":0},"generated":{"line":910,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":910,"column":0},"generated":{"line":911,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":911,"column":0},"generated":{"line":912,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":912,"column":0},"generated":{"line":913,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":913,"column":0},"generated":{"line":914,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":914,"column":0},"generated":{"line":915,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":915,"column":0},"generated":{"line":916,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":916,"column":0},"generated":{"line":917,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":917,"column":0},"generated":{"line":918,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":918,"column":0},"generated":{"line":919,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":919,"column":0},"generated":{"line":920,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":920,"column":0},"generated":{"line":921,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":921,"column":0},"generated":{"line":922,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":922,"column":0},"generated":{"line":923,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":923,"column":0},"generated":{"line":924,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":924,"column":0},"generated":{"line":925,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":925,"column":0},"generated":{"line":926,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":926,"column":0},"generated":{"line":927,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":927,"column":0},"generated":{"line":928,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":928,"column":0},"generated":{"line":929,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":929,"column":0},"generated":{"line":930,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":930,"column":0},"generated":{"line":931,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":931,"column":0},"generated":{"line":932,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":932,"column":0},"generated":{"line":933,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":933,"column":0},"generated":{"line":934,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":934,"column":0},"generated":{"line":935,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":935,"column":0},"generated":{"line":936,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":936,"column":0},"generated":{"line":937,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":937,"column":0},"generated":{"line":938,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":938,"column":0},"generated":{"line":939,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":939,"column":0},"generated":{"line":940,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":940,"column":0},"generated":{"line":941,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":941,"column":0},"generated":{"line":942,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":942,"column":0},"generated":{"line":943,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":943,"column":0},"generated":{"line":944,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":944,"column":0},"generated":{"line":945,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":945,"column":0},"generated":{"line":946,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":946,"column":0},"generated":{"line":947,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":947,"column":0},"generated":{"line":948,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":948,"column":0},"generated":{"line":949,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":949,"column":0},"generated":{"line":950,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":950,"column":0},"generated":{"line":951,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":951,"column":0},"generated":{"line":952,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":952,"column":0},"generated":{"line":953,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":953,"column":0},"generated":{"line":954,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":954,"column":0},"generated":{"line":955,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":955,"column":0},"generated":{"line":956,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":956,"column":0},"generated":{"line":957,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":957,"column":0},"generated":{"line":958,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":958,"column":0},"generated":{"line":959,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":959,"column":0},"generated":{"line":960,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":960,"column":0},"generated":{"line":961,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":961,"column":0},"generated":{"line":962,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":962,"column":0},"generated":{"line":963,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":963,"column":0},"generated":{"line":964,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":964,"column":0},"generated":{"line":965,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":965,"column":0},"generated":{"line":966,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":966,"column":0},"generated":{"line":967,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":967,"column":0},"generated":{"line":968,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":968,"column":0},"generated":{"line":969,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":969,"column":0},"generated":{"line":970,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":970,"column":0},"generated":{"line":971,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":971,"column":0},"generated":{"line":972,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":972,"column":0},"generated":{"line":973,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":973,"column":0},"generated":{"line":974,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":974,"column":0},"generated":{"line":975,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":975,"column":0},"generated":{"line":976,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":976,"column":0},"generated":{"line":977,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":977,"column":0},"generated":{"line":978,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":978,"column":0},"generated":{"line":979,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":979,"column":0},"generated":{"line":980,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":980,"column":0},"generated":{"line":981,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":981,"column":0},"generated":{"line":982,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":982,"column":0},"generated":{"line":983,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":983,"column":0},"generated":{"line":984,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":984,"column":0},"generated":{"line":985,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":985,"column":0},"generated":{"line":986,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":986,"column":0},"generated":{"line":987,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":987,"column":0},"generated":{"line":988,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":988,"column":0},"generated":{"line":989,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":989,"column":0},"generated":{"line":990,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":990,"column":0},"generated":{"line":991,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":991,"column":0},"generated":{"line":992,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":992,"column":0},"generated":{"line":993,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":993,"column":0},"generated":{"line":994,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":994,"column":0},"generated":{"line":995,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":995,"column":0},"generated":{"line":996,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":996,"column":0},"generated":{"line":997,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":997,"column":0},"generated":{"line":998,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":998,"column":0},"generated":{"line":999,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":999,"column":0},"generated":{"line":1000,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1000,"column":0},"generated":{"line":1001,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1001,"column":0},"generated":{"line":1002,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1002,"column":0},"generated":{"line":1003,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1003,"column":0},"generated":{"line":1004,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1004,"column":0},"generated":{"line":1005,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1005,"column":0},"generated":{"line":1006,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1006,"column":0},"generated":{"line":1007,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1007,"column":0},"generated":{"line":1008,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1008,"column":0},"generated":{"line":1009,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1009,"column":0},"generated":{"line":1010,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1010,"column":0},"generated":{"line":1011,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1011,"column":0},"generated":{"line":1012,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1012,"column":0},"generated":{"line":1013,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1013,"column":0},"generated":{"line":1014,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1014,"column":0},"generated":{"line":1015,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1015,"column":0},"generated":{"line":1016,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1016,"column":0},"generated":{"line":1017,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1017,"column":0},"generated":{"line":1018,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1018,"column":0},"generated":{"line":1019,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1019,"column":0},"generated":{"line":1020,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1020,"column":0},"generated":{"line":1021,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1021,"column":0},"generated":{"line":1022,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1022,"column":0},"generated":{"line":1023,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1023,"column":0},"generated":{"line":1024,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1024,"column":0},"generated":{"line":1025,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1025,"column":0},"generated":{"line":1026,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1026,"column":0},"generated":{"line":1027,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1027,"column":0},"generated":{"line":1028,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1028,"column":0},"generated":{"line":1029,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1029,"column":0},"generated":{"line":1030,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1030,"column":0},"generated":{"line":1031,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1031,"column":0},"generated":{"line":1032,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1032,"column":0},"generated":{"line":1033,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1033,"column":0},"generated":{"line":1034,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1034,"column":0},"generated":{"line":1035,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1035,"column":0},"generated":{"line":1036,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1036,"column":0},"generated":{"line":1037,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1037,"column":0},"generated":{"line":1038,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1038,"column":0},"generated":{"line":1039,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1039,"column":0},"generated":{"line":1040,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1040,"column":0},"generated":{"line":1041,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1041,"column":0},"generated":{"line":1042,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1042,"column":0},"generated":{"line":1043,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1043,"column":0},"generated":{"line":1044,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1044,"column":0},"generated":{"line":1045,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1045,"column":0},"generated":{"line":1046,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1046,"column":0},"generated":{"line":1047,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1047,"column":0},"generated":{"line":1048,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1048,"column":0},"generated":{"line":1049,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1049,"column":0},"generated":{"line":1050,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1050,"column":0},"generated":{"line":1051,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1051,"column":0},"generated":{"line":1052,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1052,"column":0},"generated":{"line":1053,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1053,"column":0},"generated":{"line":1054,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1054,"column":0},"generated":{"line":1055,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1055,"column":0},"generated":{"line":1056,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1056,"column":0},"generated":{"line":1057,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1057,"column":0},"generated":{"line":1058,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1058,"column":0},"generated":{"line":1059,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1059,"column":0},"generated":{"line":1060,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1060,"column":0},"generated":{"line":1061,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1061,"column":0},"generated":{"line":1062,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1062,"column":0},"generated":{"line":1063,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1063,"column":0},"generated":{"line":1064,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1064,"column":0},"generated":{"line":1065,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1065,"column":0},"generated":{"line":1066,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1066,"column":0},"generated":{"line":1067,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1067,"column":0},"generated":{"line":1068,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1068,"column":0},"generated":{"line":1069,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1069,"column":0},"generated":{"line":1070,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1070,"column":0},"generated":{"line":1071,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1071,"column":0},"generated":{"line":1072,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1072,"column":0},"generated":{"line":1073,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1073,"column":0},"generated":{"line":1074,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1074,"column":0},"generated":{"line":1075,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1075,"column":0},"generated":{"line":1076,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1076,"column":0},"generated":{"line":1077,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1077,"column":0},"generated":{"line":1078,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1078,"column":0},"generated":{"line":1079,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1079,"column":0},"generated":{"line":1080,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1080,"column":0},"generated":{"line":1081,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1081,"column":0},"generated":{"line":1082,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1082,"column":0},"generated":{"line":1083,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1083,"column":0},"generated":{"line":1084,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1084,"column":0},"generated":{"line":1085,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1085,"column":0},"generated":{"line":1086,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1086,"column":0},"generated":{"line":1087,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1087,"column":0},"generated":{"line":1088,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1088,"column":0},"generated":{"line":1089,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1089,"column":0},"generated":{"line":1090,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1090,"column":0},"generated":{"line":1091,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1091,"column":0},"generated":{"line":1092,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1092,"column":0},"generated":{"line":1093,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1093,"column":0},"generated":{"line":1094,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1094,"column":0},"generated":{"line":1095,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1095,"column":0},"generated":{"line":1096,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1096,"column":0},"generated":{"line":1097,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1097,"column":0},"generated":{"line":1098,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1098,"column":0},"generated":{"line":1099,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1099,"column":0},"generated":{"line":1100,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1100,"column":0},"generated":{"line":1101,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1101,"column":0},"generated":{"line":1102,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1102,"column":0},"generated":{"line":1103,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1103,"column":0},"generated":{"line":1104,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1104,"column":0},"generated":{"line":1105,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1105,"column":0},"generated":{"line":1106,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1106,"column":0},"generated":{"line":1107,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1107,"column":0},"generated":{"line":1108,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1108,"column":0},"generated":{"line":1109,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1109,"column":0},"generated":{"line":1110,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1110,"column":0},"generated":{"line":1111,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1111,"column":0},"generated":{"line":1112,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1112,"column":0},"generated":{"line":1113,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1113,"column":0},"generated":{"line":1114,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1114,"column":0},"generated":{"line":1115,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1115,"column":0},"generated":{"line":1116,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1116,"column":0},"generated":{"line":1117,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1117,"column":0},"generated":{"line":1118,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1118,"column":0},"generated":{"line":1119,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1119,"column":0},"generated":{"line":1120,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1120,"column":0},"generated":{"line":1121,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1121,"column":0},"generated":{"line":1122,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1122,"column":0},"generated":{"line":1123,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1123,"column":0},"generated":{"line":1124,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1124,"column":0},"generated":{"line":1125,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1125,"column":0},"generated":{"line":1126,"column":0}},{"source":"../../node_modules/jpeg-js/lib/decoder.js","original":{"line":1126,"column":0},"generated":{"line":1127,"column":0}}],"sources":{"../../node_modules/jpeg-js/lib/decoder.js":"/* -*- tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- /\n/* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */\n/*\n   Copyright 2011 notmasteryet\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\n// - The JPEG specification can be found in the ITU CCITT Recommendation T.81\n//   (www.w3.org/Graphics/JPEG/itu-t81.pdf)\n// - The JFIF specification can be found in the JPEG File Interchange Format\n//   (www.w3.org/Graphics/JPEG/jfif3.pdf)\n// - The Adobe Application-Specific JPEG markers in the Supporting the DCT Filters\n//   in PostScript Level 2, Technical Note #5116\n//   (partners.adobe.com/public/developer/en/ps/sdk/5116.DCT_Filter.pdf)\n\nvar JpegImage = (function jpegImage() {\n  \"use strict\";\n  var dctZigZag = new Int32Array([\n     0,\n     1,  8,\n    16,  9,  2,\n     3, 10, 17, 24,\n    32, 25, 18, 11, 4,\n     5, 12, 19, 26, 33, 40,\n    48, 41, 34, 27, 20, 13,  6,\n     7, 14, 21, 28, 35, 42, 49, 56,\n    57, 50, 43, 36, 29, 22, 15,\n    23, 30, 37, 44, 51, 58,\n    59, 52, 45, 38, 31,\n    39, 46, 53, 60,\n    61, 54, 47,\n    55, 62,\n    63\n  ]);\n\n  var dctCos1  =  4017   // cos(pi/16)\n  var dctSin1  =   799   // sin(pi/16)\n  var dctCos3  =  3406   // cos(3*pi/16)\n  var dctSin3  =  2276   // sin(3*pi/16)\n  var dctCos6  =  1567   // cos(6*pi/16)\n  var dctSin6  =  3784   // sin(6*pi/16)\n  var dctSqrt2 =  5793   // sqrt(2)\n  var dctSqrt1d2 = 2896  // sqrt(2) / 2\n\n  function constructor() {\n  }\n\n  function buildHuffmanTable(codeLengths, values) {\n    var k = 0, code = [], i, j, length = 16;\n    while (length > 0 && !codeLengths[length - 1])\n      length--;\n    code.push({children: [], index: 0});\n    var p = code[0], q;\n    for (i = 0; i < length; i++) {\n      for (j = 0; j < codeLengths[i]; j++) {\n        p = code.pop();\n        p.children[p.index] = values[k];\n        while (p.index > 0) {\n          if (code.length === 0)\n            throw new Error('Could not recreate Huffman Table');\n          p = code.pop();\n        }\n        p.index++;\n        code.push(p);\n        while (code.length <= i) {\n          code.push(q = {children: [], index: 0});\n          p.children[p.index] = q.children;\n          p = q;\n        }\n        k++;\n      }\n      if (i + 1 < length) {\n        // p here points to last code\n        code.push(q = {children: [], index: 0});\n        p.children[p.index] = q.children;\n        p = q;\n      }\n    }\n    return code[0].children;\n  }\n\n  function decodeScan(data, offset,\n                      frame, components, resetInterval,\n                      spectralStart, spectralEnd,\n                      successivePrev, successive, opts) {\n    var precision = frame.precision;\n    var samplesPerLine = frame.samplesPerLine;\n    var scanLines = frame.scanLines;\n    var mcusPerLine = frame.mcusPerLine;\n    var progressive = frame.progressive;\n    var maxH = frame.maxH, maxV = frame.maxV;\n\n    var startOffset = offset, bitsData = 0, bitsCount = 0;\n    function readBit() {\n      if (bitsCount > 0) {\n        bitsCount--;\n        return (bitsData >> bitsCount) & 1;\n      }\n      bitsData = data[offset++];\n      if (bitsData == 0xFF) {\n        var nextByte = data[offset++];\n        if (nextByte) {\n          throw new Error(\"unexpected marker: \" + ((bitsData << 8) | nextByte).toString(16));\n        }\n        // unstuff 0\n      }\n      bitsCount = 7;\n      return bitsData >>> 7;\n    }\n    function decodeHuffman(tree) {\n      var node = tree, bit;\n      while ((bit = readBit()) !== null) {\n        node = node[bit];\n        if (typeof node === 'number')\n          return node;\n        if (typeof node !== 'object')\n          throw new Error(\"invalid huffman sequence\");\n      }\n      return null;\n    }\n    function receive(length) {\n      var n = 0;\n      while (length > 0) {\n        var bit = readBit();\n        if (bit === null) return;\n        n = (n << 1) | bit;\n        length--;\n      }\n      return n;\n    }\n    function receiveAndExtend(length) {\n      var n = receive(length);\n      if (n >= 1 << (length - 1))\n        return n;\n      return n + (-1 << length) + 1;\n    }\n    function decodeBaseline(component, zz) {\n      var t = decodeHuffman(component.huffmanTableDC);\n      var diff = t === 0 ? 0 : receiveAndExtend(t);\n      zz[0]= (component.pred += diff);\n      var k = 1;\n      while (k < 64) {\n        var rs = decodeHuffman(component.huffmanTableAC);\n        var s = rs & 15, r = rs >> 4;\n        if (s === 0) {\n          if (r < 15)\n            break;\n          k += 16;\n          continue;\n        }\n        k += r;\n        var z = dctZigZag[k];\n        zz[z] = receiveAndExtend(s);\n        k++;\n      }\n    }\n    function decodeDCFirst(component, zz) {\n      var t = decodeHuffman(component.huffmanTableDC);\n      var diff = t === 0 ? 0 : (receiveAndExtend(t) << successive);\n      zz[0] = (component.pred += diff);\n    }\n    function decodeDCSuccessive(component, zz) {\n      zz[0] |= readBit() << successive;\n    }\n    var eobrun = 0;\n    function decodeACFirst(component, zz) {\n      if (eobrun > 0) {\n        eobrun--;\n        return;\n      }\n      var k = spectralStart, e = spectralEnd;\n      while (k <= e) {\n        var rs = decodeHuffman(component.huffmanTableAC);\n        var s = rs & 15, r = rs >> 4;\n        if (s === 0) {\n          if (r < 15) {\n            eobrun = receive(r) + (1 << r) - 1;\n            break;\n          }\n          k += 16;\n          continue;\n        }\n        k += r;\n        var z = dctZigZag[k];\n        zz[z] = receiveAndExtend(s) * (1 << successive);\n        k++;\n      }\n    }\n    var successiveACState = 0, successiveACNextValue;\n    function decodeACSuccessive(component, zz) {\n      var k = spectralStart, e = spectralEnd, r = 0;\n      while (k <= e) {\n        var z = dctZigZag[k];\n        var direction = zz[z] < 0 ? -1 : 1;\n        switch (successiveACState) {\n        case 0: // initial state\n          var rs = decodeHuffman(component.huffmanTableAC);\n          var s = rs & 15, r = rs >> 4;\n          if (s === 0) {\n            if (r < 15) {\n              eobrun = receive(r) + (1 << r);\n              successiveACState = 4;\n            } else {\n              r = 16;\n              successiveACState = 1;\n            }\n          } else {\n            if (s !== 1)\n              throw new Error(\"invalid ACn encoding\");\n            successiveACNextValue = receiveAndExtend(s);\n            successiveACState = r ? 2 : 3;\n          }\n          continue;\n        case 1: // skipping r zero items\n        case 2:\n          if (zz[z])\n            zz[z] += (readBit() << successive) * direction;\n          else {\n            r--;\n            if (r === 0)\n              successiveACState = successiveACState == 2 ? 3 : 0;\n          }\n          break;\n        case 3: // set value for a zero item\n          if (zz[z])\n            zz[z] += (readBit() << successive) * direction;\n          else {\n            zz[z] = successiveACNextValue << successive;\n            successiveACState = 0;\n          }\n          break;\n        case 4: // eob\n          if (zz[z])\n            zz[z] += (readBit() << successive) * direction;\n          break;\n        }\n        k++;\n      }\n      if (successiveACState === 4) {\n        eobrun--;\n        if (eobrun === 0)\n          successiveACState = 0;\n      }\n    }\n    function decodeMcu(component, decode, mcu, row, col) {\n      var mcuRow = (mcu / mcusPerLine) | 0;\n      var mcuCol = mcu % mcusPerLine;\n      var blockRow = mcuRow * component.v + row;\n      var blockCol = mcuCol * component.h + col;\n      // If the block is missing and we're in tolerant mode, just skip it.\n      if (component.blocks[blockRow] === undefined && opts.tolerantDecoding)\n        return;\n      decode(component, component.blocks[blockRow][blockCol]);\n    }\n    function decodeBlock(component, decode, mcu) {\n      var blockRow = (mcu / component.blocksPerLine) | 0;\n      var blockCol = mcu % component.blocksPerLine;\n      // If the block is missing and we're in tolerant mode, just skip it.\n      if (component.blocks[blockRow] === undefined && opts.tolerantDecoding)\n        return;\n      decode(component, component.blocks[blockRow][blockCol]);\n    }\n\n    var componentsLength = components.length;\n    var component, i, j, k, n;\n    var decodeFn;\n    if (progressive) {\n      if (spectralStart === 0)\n        decodeFn = successivePrev === 0 ? decodeDCFirst : decodeDCSuccessive;\n      else\n        decodeFn = successivePrev === 0 ? decodeACFirst : decodeACSuccessive;\n    } else {\n      decodeFn = decodeBaseline;\n    }\n\n    var mcu = 0, marker;\n    var mcuExpected;\n    if (componentsLength == 1) {\n      mcuExpected = components[0].blocksPerLine * components[0].blocksPerColumn;\n    } else {\n      mcuExpected = mcusPerLine * frame.mcusPerColumn;\n    }\n    if (!resetInterval) resetInterval = mcuExpected;\n\n    var h, v;\n    while (mcu < mcuExpected) {\n      // reset interval stuff\n      for (i = 0; i < componentsLength; i++)\n        components[i].pred = 0;\n      eobrun = 0;\n\n      if (componentsLength == 1) {\n        component = components[0];\n        for (n = 0; n < resetInterval; n++) {\n          decodeBlock(component, decodeFn, mcu);\n          mcu++;\n        }\n      } else {\n        for (n = 0; n < resetInterval; n++) {\n          for (i = 0; i < componentsLength; i++) {\n            component = components[i];\n            h = component.h;\n            v = component.v;\n            for (j = 0; j < v; j++) {\n              for (k = 0; k < h; k++) {\n                decodeMcu(component, decodeFn, mcu, j, k);\n              }\n            }\n          }\n          mcu++;\n\n          // If we've reached our expected MCU's, stop decoding\n          if (mcu === mcuExpected) break;\n        }\n      }\n\n      if (mcu === mcuExpected) {\n        // Skip trailing bytes at the end of the scan - until we reach the next marker\n        do {\n          if (data[offset] === 0xFF) {\n            if (data[offset + 1] !== 0x00) {\n              break;\n            }\n          }\n          offset += 1;\n        } while (offset < data.length - 2);\n      }\n\n      // find marker\n      bitsCount = 0;\n      marker = (data[offset] << 8) | data[offset + 1];\n      if (marker < 0xFF00) {\n        throw new Error(\"marker was not found\");\n      }\n\n      if (marker >= 0xFFD0 && marker <= 0xFFD7) { // RSTx\n        offset += 2;\n      }\n      else\n        break;\n    }\n\n    return offset - startOffset;\n  }\n\n  function buildComponentData(frame, component) {\n    var lines = [];\n    var blocksPerLine = component.blocksPerLine;\n    var blocksPerColumn = component.blocksPerColumn;\n    var samplesPerLine = blocksPerLine << 3;\n    // Only 1 used per invocation of this function and garbage collected after invocation, so no need to account for its memory footprint.\n    var R = new Int32Array(64), r = new Uint8Array(64);\n\n    // A port of poppler's IDCT method which in turn is taken from:\n    //   Christoph Loeffler, Adriaan Ligtenberg, George S. Moschytz,\n    //   \"Practical Fast 1-D DCT Algorithms with 11 Multiplications\",\n    //   IEEE Intl. Conf. on Acoustics, Speech & Signal Processing, 1989,\n    //   988-991.\n    function quantizeAndInverse(zz, dataOut, dataIn) {\n      var qt = component.quantizationTable;\n      var v0, v1, v2, v3, v4, v5, v6, v7, t;\n      var p = dataIn;\n      var i;\n\n      // dequant\n      for (i = 0; i < 64; i++)\n        p[i] = zz[i] * qt[i];\n\n      // inverse DCT on rows\n      for (i = 0; i < 8; ++i) {\n        var row = 8 * i;\n\n        // check for all-zero AC coefficients\n        if (p[1 + row] == 0 && p[2 + row] == 0 && p[3 + row] == 0 &&\n            p[4 + row] == 0 && p[5 + row] == 0 && p[6 + row] == 0 &&\n            p[7 + row] == 0) {\n          t = (dctSqrt2 * p[0 + row] + 512) >> 10;\n          p[0 + row] = t;\n          p[1 + row] = t;\n          p[2 + row] = t;\n          p[3 + row] = t;\n          p[4 + row] = t;\n          p[5 + row] = t;\n          p[6 + row] = t;\n          p[7 + row] = t;\n          continue;\n        }\n\n        // stage 4\n        v0 = (dctSqrt2 * p[0 + row] + 128) >> 8;\n        v1 = (dctSqrt2 * p[4 + row] + 128) >> 8;\n        v2 = p[2 + row];\n        v3 = p[6 + row];\n        v4 = (dctSqrt1d2 * (p[1 + row] - p[7 + row]) + 128) >> 8;\n        v7 = (dctSqrt1d2 * (p[1 + row] + p[7 + row]) + 128) >> 8;\n        v5 = p[3 + row] << 4;\n        v6 = p[5 + row] << 4;\n\n        // stage 3\n        t = (v0 - v1+ 1) >> 1;\n        v0 = (v0 + v1 + 1) >> 1;\n        v1 = t;\n        t = (v2 * dctSin6 + v3 * dctCos6 + 128) >> 8;\n        v2 = (v2 * dctCos6 - v3 * dctSin6 + 128) >> 8;\n        v3 = t;\n        t = (v4 - v6 + 1) >> 1;\n        v4 = (v4 + v6 + 1) >> 1;\n        v6 = t;\n        t = (v7 + v5 + 1) >> 1;\n        v5 = (v7 - v5 + 1) >> 1;\n        v7 = t;\n\n        // stage 2\n        t = (v0 - v3 + 1) >> 1;\n        v0 = (v0 + v3 + 1) >> 1;\n        v3 = t;\n        t = (v1 - v2 + 1) >> 1;\n        v1 = (v1 + v2 + 1) >> 1;\n        v2 = t;\n        t = (v4 * dctSin3 + v7 * dctCos3 + 2048) >> 12;\n        v4 = (v4 * dctCos3 - v7 * dctSin3 + 2048) >> 12;\n        v7 = t;\n        t = (v5 * dctSin1 + v6 * dctCos1 + 2048) >> 12;\n        v5 = (v5 * dctCos1 - v6 * dctSin1 + 2048) >> 12;\n        v6 = t;\n\n        // stage 1\n        p[0 + row] = v0 + v7;\n        p[7 + row] = v0 - v7;\n        p[1 + row] = v1 + v6;\n        p[6 + row] = v1 - v6;\n        p[2 + row] = v2 + v5;\n        p[5 + row] = v2 - v5;\n        p[3 + row] = v3 + v4;\n        p[4 + row] = v3 - v4;\n      }\n\n      // inverse DCT on columns\n      for (i = 0; i < 8; ++i) {\n        var col = i;\n\n        // check for all-zero AC coefficients\n        if (p[1*8 + col] == 0 && p[2*8 + col] == 0 && p[3*8 + col] == 0 &&\n            p[4*8 + col] == 0 && p[5*8 + col] == 0 && p[6*8 + col] == 0 &&\n            p[7*8 + col] == 0) {\n          t = (dctSqrt2 * dataIn[i+0] + 8192) >> 14;\n          p[0*8 + col] = t;\n          p[1*8 + col] = t;\n          p[2*8 + col] = t;\n          p[3*8 + col] = t;\n          p[4*8 + col] = t;\n          p[5*8 + col] = t;\n          p[6*8 + col] = t;\n          p[7*8 + col] = t;\n          continue;\n        }\n\n        // stage 4\n        v0 = (dctSqrt2 * p[0*8 + col] + 2048) >> 12;\n        v1 = (dctSqrt2 * p[4*8 + col] + 2048) >> 12;\n        v2 = p[2*8 + col];\n        v3 = p[6*8 + col];\n        v4 = (dctSqrt1d2 * (p[1*8 + col] - p[7*8 + col]) + 2048) >> 12;\n        v7 = (dctSqrt1d2 * (p[1*8 + col] + p[7*8 + col]) + 2048) >> 12;\n        v5 = p[3*8 + col];\n        v6 = p[5*8 + col];\n\n        // stage 3\n        t = (v0 - v1 + 1) >> 1;\n        v0 = (v0 + v1 + 1) >> 1;\n        v1 = t;\n        t = (v2 * dctSin6 + v3 * dctCos6 + 2048) >> 12;\n        v2 = (v2 * dctCos6 - v3 * dctSin6 + 2048) >> 12;\n        v3 = t;\n        t = (v4 - v6 + 1) >> 1;\n        v4 = (v4 + v6 + 1) >> 1;\n        v6 = t;\n        t = (v7 + v5 + 1) >> 1;\n        v5 = (v7 - v5 + 1) >> 1;\n        v7 = t;\n\n        // stage 2\n        t = (v0 - v3 + 1) >> 1;\n        v0 = (v0 + v3 + 1) >> 1;\n        v3 = t;\n        t = (v1 - v2 + 1) >> 1;\n        v1 = (v1 + v2 + 1) >> 1;\n        v2 = t;\n        t = (v4 * dctSin3 + v7 * dctCos3 + 2048) >> 12;\n        v4 = (v4 * dctCos3 - v7 * dctSin3 + 2048) >> 12;\n        v7 = t;\n        t = (v5 * dctSin1 + v6 * dctCos1 + 2048) >> 12;\n        v5 = (v5 * dctCos1 - v6 * dctSin1 + 2048) >> 12;\n        v6 = t;\n\n        // stage 1\n        p[0*8 + col] = v0 + v7;\n        p[7*8 + col] = v0 - v7;\n        p[1*8 + col] = v1 + v6;\n        p[6*8 + col] = v1 - v6;\n        p[2*8 + col] = v2 + v5;\n        p[5*8 + col] = v2 - v5;\n        p[3*8 + col] = v3 + v4;\n        p[4*8 + col] = v3 - v4;\n      }\n\n      // convert to 8-bit integers\n      for (i = 0; i < 64; ++i) {\n        var sample = 128 + ((p[i] + 8) >> 4);\n        dataOut[i] = sample < 0 ? 0 : sample > 0xFF ? 0xFF : sample;\n      }\n    }\n\n    requestMemoryAllocation(samplesPerLine * blocksPerColumn * 8);\n\n    var i, j;\n    for (var blockRow = 0; blockRow < blocksPerColumn; blockRow++) {\n      var scanLine = blockRow << 3;\n      for (i = 0; i < 8; i++)\n        lines.push(new Uint8Array(samplesPerLine));\n      for (var blockCol = 0; blockCol < blocksPerLine; blockCol++) {\n        quantizeAndInverse(component.blocks[blockRow][blockCol], r, R);\n\n        var offset = 0, sample = blockCol << 3;\n        for (j = 0; j < 8; j++) {\n          var line = lines[scanLine + j];\n          for (i = 0; i < 8; i++)\n            line[sample + i] = r[offset++];\n        }\n      }\n    }\n    return lines;\n  }\n\n  function clampTo8bit(a) {\n    return a < 0 ? 0 : a > 255 ? 255 : a;\n  }\n\n  constructor.prototype = {\n    load: function load(path) {\n      var xhr = new XMLHttpRequest();\n      xhr.open(\"GET\", path, true);\n      xhr.responseType = \"arraybuffer\";\n      xhr.onload = (function() {\n        // TODO catch parse error\n        var data = new Uint8Array(xhr.response || xhr.mozResponseArrayBuffer);\n        this.parse(data);\n        if (this.onload)\n          this.onload();\n      }).bind(this);\n      xhr.send(null);\n    },\n    parse: function parse(data) {\n      var maxResolutionInPixels = this.opts.maxResolutionInMP * 1000 * 1000;\n      var offset = 0, length = data.length;\n      function readUint16() {\n        var value = (data[offset] << 8) | data[offset + 1];\n        offset += 2;\n        return value;\n      }\n      function readDataBlock() {\n        var length = readUint16();\n        var array = data.subarray(offset, offset + length - 2);\n        offset += array.length;\n        return array;\n      }\n      function prepareComponents(frame) {\n        var maxH = 0, maxV = 0;\n        var component, componentId;\n        for (componentId in frame.components) {\n          if (frame.components.hasOwnProperty(componentId)) {\n            component = frame.components[componentId];\n            if (maxH < component.h) maxH = component.h;\n            if (maxV < component.v) maxV = component.v;\n          }\n        }\n        var mcusPerLine = Math.ceil(frame.samplesPerLine / 8 / maxH);\n        var mcusPerColumn = Math.ceil(frame.scanLines / 8 / maxV);\n        for (componentId in frame.components) {\n          if (frame.components.hasOwnProperty(componentId)) {\n            component = frame.components[componentId];\n            var blocksPerLine = Math.ceil(Math.ceil(frame.samplesPerLine / 8) * component.h / maxH);\n            var blocksPerColumn = Math.ceil(Math.ceil(frame.scanLines  / 8) * component.v / maxV);\n            var blocksPerLineForMcu = mcusPerLine * component.h;\n            var blocksPerColumnForMcu = mcusPerColumn * component.v;\n            var blocksToAllocate = blocksPerColumnForMcu * blocksPerLineForMcu;\n            var blocks = [];\n\n            // Each block is a Int32Array of length 64 (4 x 64 = 256 bytes)\n            requestMemoryAllocation(blocksToAllocate * 256);\n\n            for (var i = 0; i < blocksPerColumnForMcu; i++) {\n              var row = [];\n              for (var j = 0; j < blocksPerLineForMcu; j++)\n                row.push(new Int32Array(64));\n              blocks.push(row);\n            }\n            component.blocksPerLine = blocksPerLine;\n            component.blocksPerColumn = blocksPerColumn;\n            component.blocks = blocks;\n          }\n        }\n        frame.maxH = maxH;\n        frame.maxV = maxV;\n        frame.mcusPerLine = mcusPerLine;\n        frame.mcusPerColumn = mcusPerColumn;\n      }\n      var jfif = null;\n      var adobe = null;\n      var pixels = null;\n      var frame, resetInterval;\n      var quantizationTables = [], frames = [];\n      var huffmanTablesAC = [], huffmanTablesDC = [];\n      var fileMarker = readUint16();\n      this.comments = [];\n      if (fileMarker != 0xFFD8) { // SOI (Start of Image)\n        throw new Error(\"SOI not found\");\n      }\n\n      fileMarker = readUint16();\n      while (fileMarker != 0xFFD9) { // EOI (End of image)\n        var i, j, l;\n        switch(fileMarker) {\n          case 0xFF00: break;\n          case 0xFFE0: // APP0 (Application Specific)\n          case 0xFFE1: // APP1\n          case 0xFFE2: // APP2\n          case 0xFFE3: // APP3\n          case 0xFFE4: // APP4\n          case 0xFFE5: // APP5\n          case 0xFFE6: // APP6\n          case 0xFFE7: // APP7\n          case 0xFFE8: // APP8\n          case 0xFFE9: // APP9\n          case 0xFFEA: // APP10\n          case 0xFFEB: // APP11\n          case 0xFFEC: // APP12\n          case 0xFFED: // APP13\n          case 0xFFEE: // APP14\n          case 0xFFEF: // APP15\n          case 0xFFFE: // COM (Comment)\n            var appData = readDataBlock();\n\n            if (fileMarker === 0xFFFE) {\n              var comment = String.fromCharCode.apply(null, appData);\n              this.comments.push(comment);\n            }\n\n            if (fileMarker === 0xFFE0) {\n              if (appData[0] === 0x4A && appData[1] === 0x46 && appData[2] === 0x49 &&\n                appData[3] === 0x46 && appData[4] === 0) { // 'JFIF\\x00'\n                jfif = {\n                  version: { major: appData[5], minor: appData[6] },\n                  densityUnits: appData[7],\n                  xDensity: (appData[8] << 8) | appData[9],\n                  yDensity: (appData[10] << 8) | appData[11],\n                  thumbWidth: appData[12],\n                  thumbHeight: appData[13],\n                  thumbData: appData.subarray(14, 14 + 3 * appData[12] * appData[13])\n                };\n              }\n            }\n            // TODO APP1 - Exif\n            if (fileMarker === 0xFFE1) {\n              if (appData[0] === 0x45 &&\n                appData[1] === 0x78 &&\n                appData[2] === 0x69 &&\n                appData[3] === 0x66 &&\n                appData[4] === 0) { // 'EXIF\\x00'\n                this.exifBuffer = appData.subarray(5, appData.length);\n              }\n            }\n\n            if (fileMarker === 0xFFEE) {\n              if (appData[0] === 0x41 && appData[1] === 0x64 && appData[2] === 0x6F &&\n                appData[3] === 0x62 && appData[4] === 0x65 && appData[5] === 0) { // 'Adobe\\x00'\n                adobe = {\n                  version: appData[6],\n                  flags0: (appData[7] << 8) | appData[8],\n                  flags1: (appData[9] << 8) | appData[10],\n                  transformCode: appData[11]\n                };\n              }\n            }\n            break;\n\n          case 0xFFDB: // DQT (Define Quantization Tables)\n            var quantizationTablesLength = readUint16();\n            var quantizationTablesEnd = quantizationTablesLength + offset - 2;\n            while (offset < quantizationTablesEnd) {\n              var quantizationTableSpec = data[offset++];\n              requestMemoryAllocation(64 * 4);\n              var tableData = new Int32Array(64);\n              if ((quantizationTableSpec >> 4) === 0) { // 8 bit values\n                for (j = 0; j < 64; j++) {\n                  var z = dctZigZag[j];\n                  tableData[z] = data[offset++];\n                }\n              } else if ((quantizationTableSpec >> 4) === 1) { //16 bit\n                for (j = 0; j < 64; j++) {\n                  var z = dctZigZag[j];\n                  tableData[z] = readUint16();\n                }\n              } else\n                throw new Error(\"DQT: invalid table spec\");\n              quantizationTables[quantizationTableSpec & 15] = tableData;\n            }\n            break;\n\n          case 0xFFC0: // SOF0 (Start of Frame, Baseline DCT)\n          case 0xFFC1: // SOF1 (Start of Frame, Extended DCT)\n          case 0xFFC2: // SOF2 (Start of Frame, Progressive DCT)\n            readUint16(); // skip data length\n            frame = {};\n            frame.extended = (fileMarker === 0xFFC1);\n            frame.progressive = (fileMarker === 0xFFC2);\n            frame.precision = data[offset++];\n            frame.scanLines = readUint16();\n            frame.samplesPerLine = readUint16();\n            frame.components = {};\n            frame.componentsOrder = [];\n\n            var pixelsInFrame = frame.scanLines * frame.samplesPerLine;\n            if (pixelsInFrame > maxResolutionInPixels) {\n              var exceededAmount = Math.ceil((pixelsInFrame - maxResolutionInPixels) / 1e6);\n              throw new Error(`maxResolutionInMP limit exceeded by ${exceededAmount}MP`);\n            }\n\n            var componentsCount = data[offset++], componentId;\n            var maxH = 0, maxV = 0;\n            for (i = 0; i < componentsCount; i++) {\n              componentId = data[offset];\n              var h = data[offset + 1] >> 4;\n              var v = data[offset + 1] & 15;\n              var qId = data[offset + 2];\n              frame.componentsOrder.push(componentId);\n              frame.components[componentId] = {\n                h: h,\n                v: v,\n                quantizationIdx: qId\n              };\n              offset += 3;\n            }\n            prepareComponents(frame);\n            frames.push(frame);\n            break;\n\n          case 0xFFC4: // DHT (Define Huffman Tables)\n            var huffmanLength = readUint16();\n            for (i = 2; i < huffmanLength;) {\n              var huffmanTableSpec = data[offset++];\n              var codeLengths = new Uint8Array(16);\n              var codeLengthSum = 0;\n              for (j = 0; j < 16; j++, offset++) {\n                codeLengthSum += (codeLengths[j] = data[offset]);\n              }\n              requestMemoryAllocation(16 + codeLengthSum);\n              var huffmanValues = new Uint8Array(codeLengthSum);\n              for (j = 0; j < codeLengthSum; j++, offset++)\n                huffmanValues[j] = data[offset];\n              i += 17 + codeLengthSum;\n\n              ((huffmanTableSpec >> 4) === 0 ?\n                huffmanTablesDC : huffmanTablesAC)[huffmanTableSpec & 15] =\n                buildHuffmanTable(codeLengths, huffmanValues);\n            }\n            break;\n\n          case 0xFFDD: // DRI (Define Restart Interval)\n            readUint16(); // skip data length\n            resetInterval = readUint16();\n            break;\n\n          case 0xFFDC: // Number of Lines marker\n            readUint16() // skip data length\n            readUint16() // Ignore this data since it represents the image height\n            break;\n            \n          case 0xFFDA: // SOS (Start of Scan)\n            var scanLength = readUint16();\n            var selectorsCount = data[offset++];\n            var components = [], component;\n            for (i = 0; i < selectorsCount; i++) {\n              component = frame.components[data[offset++]];\n              var tableSpec = data[offset++];\n              component.huffmanTableDC = huffmanTablesDC[tableSpec >> 4];\n              component.huffmanTableAC = huffmanTablesAC[tableSpec & 15];\n              components.push(component);\n            }\n            var spectralStart = data[offset++];\n            var spectralEnd = data[offset++];\n            var successiveApproximation = data[offset++];\n            var processed = decodeScan(data, offset,\n              frame, components, resetInterval,\n              spectralStart, spectralEnd,\n              successiveApproximation >> 4, successiveApproximation & 15, this.opts);\n            offset += processed;\n            break;\n\n          case 0xFFFF: // Fill bytes\n            if (data[offset] !== 0xFF) { // Avoid skipping a valid marker.\n              offset--;\n            }\n            break;\n\n          default:\n            if (data[offset - 3] == 0xFF &&\n                data[offset - 2] >= 0xC0 && data[offset - 2] <= 0xFE) {\n              // could be incorrect encoding -- last 0xFF byte of the previous\n              // block was eaten by the encoder\n              offset -= 3;\n              break;\n            }\n            throw new Error(\"unknown JPEG marker \" + fileMarker.toString(16));\n        }\n        fileMarker = readUint16();\n      }\n      if (frames.length != 1)\n        throw new Error(\"only single frame JPEGs supported\");\n\n      // set each frame's components quantization table\n      for (var i = 0; i < frames.length; i++) {\n        var cp = frames[i].components;\n        for (var j in cp) {\n          cp[j].quantizationTable = quantizationTables[cp[j].quantizationIdx];\n          delete cp[j].quantizationIdx;\n        }\n      }\n\n      this.width = frame.samplesPerLine;\n      this.height = frame.scanLines;\n      this.jfif = jfif;\n      this.adobe = adobe;\n      this.components = [];\n      for (var i = 0; i < frame.componentsOrder.length; i++) {\n        var component = frame.components[frame.componentsOrder[i]];\n        this.components.push({\n          lines: buildComponentData(frame, component),\n          scaleX: component.h / frame.maxH,\n          scaleY: component.v / frame.maxV\n        });\n      }\n    },\n    getData: function getData(width, height) {\n      var scaleX = this.width / width, scaleY = this.height / height;\n\n      var component1, component2, component3, component4;\n      var component1Line, component2Line, component3Line, component4Line;\n      var x, y;\n      var offset = 0;\n      var Y, Cb, Cr, K, C, M, Ye, R, G, B;\n      var colorTransform;\n      var dataLength = width * height * this.components.length;\n      requestMemoryAllocation(dataLength);\n      var data = new Uint8Array(dataLength);\n      switch (this.components.length) {\n        case 1:\n          component1 = this.components[0];\n          for (y = 0; y < height; y++) {\n            component1Line = component1.lines[0 | (y * component1.scaleY * scaleY)];\n            for (x = 0; x < width; x++) {\n              Y = component1Line[0 | (x * component1.scaleX * scaleX)];\n\n              data[offset++] = Y;\n            }\n          }\n          break;\n        case 2:\n          // PDF might compress two component data in custom colorspace\n          component1 = this.components[0];\n          component2 = this.components[1];\n          for (y = 0; y < height; y++) {\n            component1Line = component1.lines[0 | (y * component1.scaleY * scaleY)];\n            component2Line = component2.lines[0 | (y * component2.scaleY * scaleY)];\n            for (x = 0; x < width; x++) {\n              Y = component1Line[0 | (x * component1.scaleX * scaleX)];\n              data[offset++] = Y;\n              Y = component2Line[0 | (x * component2.scaleX * scaleX)];\n              data[offset++] = Y;\n            }\n          }\n          break;\n        case 3:\n          // The default transform for three components is true\n          colorTransform = true;\n          // The adobe transform marker overrides any previous setting\n          if (this.adobe && this.adobe.transformCode)\n            colorTransform = true;\n          else if (typeof this.opts.colorTransform !== 'undefined')\n            colorTransform = !!this.opts.colorTransform;\n\n          component1 = this.components[0];\n          component2 = this.components[1];\n          component3 = this.components[2];\n          for (y = 0; y < height; y++) {\n            component1Line = component1.lines[0 | (y * component1.scaleY * scaleY)];\n            component2Line = component2.lines[0 | (y * component2.scaleY * scaleY)];\n            component3Line = component3.lines[0 | (y * component3.scaleY * scaleY)];\n            for (x = 0; x < width; x++) {\n              if (!colorTransform) {\n                R = component1Line[0 | (x * component1.scaleX * scaleX)];\n                G = component2Line[0 | (x * component2.scaleX * scaleX)];\n                B = component3Line[0 | (x * component3.scaleX * scaleX)];\n              } else {\n                Y = component1Line[0 | (x * component1.scaleX * scaleX)];\n                Cb = component2Line[0 | (x * component2.scaleX * scaleX)];\n                Cr = component3Line[0 | (x * component3.scaleX * scaleX)];\n\n                R = clampTo8bit(Y + 1.402 * (Cr - 128));\n                G = clampTo8bit(Y - 0.3441363 * (Cb - 128) - 0.71413636 * (Cr - 128));\n                B = clampTo8bit(Y + 1.772 * (Cb - 128));\n              }\n\n              data[offset++] = R;\n              data[offset++] = G;\n              data[offset++] = B;\n            }\n          }\n          break;\n        case 4:\n          if (!this.adobe)\n            throw new Error('Unsupported color mode (4 components)');\n          // The default transform for four components is false\n          colorTransform = false;\n          // The adobe transform marker overrides any previous setting\n          if (this.adobe && this.adobe.transformCode)\n            colorTransform = true;\n          else if (typeof this.opts.colorTransform !== 'undefined')\n            colorTransform = !!this.opts.colorTransform;\n\n          component1 = this.components[0];\n          component2 = this.components[1];\n          component3 = this.components[2];\n          component4 = this.components[3];\n          for (y = 0; y < height; y++) {\n            component1Line = component1.lines[0 | (y * component1.scaleY * scaleY)];\n            component2Line = component2.lines[0 | (y * component2.scaleY * scaleY)];\n            component3Line = component3.lines[0 | (y * component3.scaleY * scaleY)];\n            component4Line = component4.lines[0 | (y * component4.scaleY * scaleY)];\n            for (x = 0; x < width; x++) {\n              if (!colorTransform) {\n                C = component1Line[0 | (x * component1.scaleX * scaleX)];\n                M = component2Line[0 | (x * component2.scaleX * scaleX)];\n                Ye = component3Line[0 | (x * component3.scaleX * scaleX)];\n                K = component4Line[0 | (x * component4.scaleX * scaleX)];\n              } else {\n                Y = component1Line[0 | (x * component1.scaleX * scaleX)];\n                Cb = component2Line[0 | (x * component2.scaleX * scaleX)];\n                Cr = component3Line[0 | (x * component3.scaleX * scaleX)];\n                K = component4Line[0 | (x * component4.scaleX * scaleX)];\n\n                C = 255 - clampTo8bit(Y + 1.402 * (Cr - 128));\n                M = 255 - clampTo8bit(Y - 0.3441363 * (Cb - 128) - 0.71413636 * (Cr - 128));\n                Ye = 255 - clampTo8bit(Y + 1.772 * (Cb - 128));\n              }\n              data[offset++] = 255-C;\n              data[offset++] = 255-M;\n              data[offset++] = 255-Ye;\n              data[offset++] = 255-K;\n            }\n          }\n          break;\n        default:\n          throw new Error('Unsupported color mode');\n      }\n      return data;\n    },\n    copyToImageData: function copyToImageData(imageData, formatAsRGBA) {\n      var width = imageData.width, height = imageData.height;\n      var imageDataArray = imageData.data;\n      var data = this.getData(width, height);\n      var i = 0, j = 0, x, y;\n      var Y, K, C, M, R, G, B;\n      switch (this.components.length) {\n        case 1:\n          for (y = 0; y < height; y++) {\n            for (x = 0; x < width; x++) {\n              Y = data[i++];\n\n              imageDataArray[j++] = Y;\n              imageDataArray[j++] = Y;\n              imageDataArray[j++] = Y;\n              if (formatAsRGBA) {\n                imageDataArray[j++] = 255;\n              }\n            }\n          }\n          break;\n        case 3:\n          for (y = 0; y < height; y++) {\n            for (x = 0; x < width; x++) {\n              R = data[i++];\n              G = data[i++];\n              B = data[i++];\n\n              imageDataArray[j++] = R;\n              imageDataArray[j++] = G;\n              imageDataArray[j++] = B;\n              if (formatAsRGBA) {\n                imageDataArray[j++] = 255;\n              }\n            }\n          }\n          break;\n        case 4:\n          for (y = 0; y < height; y++) {\n            for (x = 0; x < width; x++) {\n              C = data[i++];\n              M = data[i++];\n              Y = data[i++];\n              K = data[i++];\n\n              R = 255 - clampTo8bit(C * (1 - K / 255) + K);\n              G = 255 - clampTo8bit(M * (1 - K / 255) + K);\n              B = 255 - clampTo8bit(Y * (1 - K / 255) + K);\n\n              imageDataArray[j++] = R;\n              imageDataArray[j++] = G;\n              imageDataArray[j++] = B;\n              if (formatAsRGBA) {\n                imageDataArray[j++] = 255;\n              }\n            }\n          }\n          break;\n        default:\n          throw new Error('Unsupported color mode');\n      }\n    }\n  };\n\n\n  // We cap the amount of memory used by jpeg-js to avoid unexpected OOMs from untrusted content.\n  var totalBytesAllocated = 0;\n  var maxMemoryUsageBytes = 0;\n  function requestMemoryAllocation(increaseAmount = 0) {\n    var totalMemoryImpactBytes = totalBytesAllocated + increaseAmount;\n    if (totalMemoryImpactBytes > maxMemoryUsageBytes) {\n      var exceededAmount = Math.ceil((totalMemoryImpactBytes - maxMemoryUsageBytes) / 1024 / 1024);\n      throw new Error(`maxMemoryUsageInMB limit exceeded by at least ${exceededAmount}MB`);\n    }\n\n    totalBytesAllocated = totalMemoryImpactBytes;\n  }\n\n  constructor.resetMaxMemoryUsage = function (maxMemoryUsageBytes_) {\n    totalBytesAllocated = 0;\n    maxMemoryUsageBytes = maxMemoryUsageBytes_;\n  };\n\n  constructor.getBytesAllocated = function () {\n    return totalBytesAllocated;\n  };\n\n  constructor.requestMemoryAllocation = requestMemoryAllocation;\n\n  return constructor;\n})();\n\nif (typeof module !== 'undefined') {\n\tmodule.exports = decode;\n} else if (typeof window !== 'undefined') {\n\twindow['jpeg-js'] = window['jpeg-js'] || {};\n\twindow['jpeg-js'].decode = decode;\n}\n\nfunction decode(jpegData, userOpts = {}) {\n  var defaultOpts = {\n    // \"undefined\" means \"Choose whether to transform colors based on the image’s color model.\"\n    colorTransform: undefined,\n    useTArray: false,\n    formatAsRGBA: true,\n    tolerantDecoding: true,\n    maxResolutionInMP: 100, // Don't decode more than 100 megapixels\n    maxMemoryUsageInMB: 512, // Don't decode if memory footprint is more than 512MB\n  };\n\n  var opts = {...defaultOpts, ...userOpts};\n  var arr = new Uint8Array(jpegData);\n  var decoder = new JpegImage();\n  decoder.opts = opts;\n  // If this constructor ever supports async decoding this will need to be done differently.\n  // Until then, treating as singleton limit is fine.\n  JpegImage.resetMaxMemoryUsage(opts.maxMemoryUsageInMB * 1024 * 1024);\n  decoder.parse(arr);\n\n  var channels = (opts.formatAsRGBA) ? 4 : 3;\n  var bytesNeeded = decoder.width * decoder.height * channels;\n  try {\n    JpegImage.requestMemoryAllocation(bytesNeeded);\n    var image = {\n      width: decoder.width,\n      height: decoder.height,\n      exifBuffer: decoder.exifBuffer,\n      data: opts.useTArray ?\n        new Uint8Array(bytesNeeded) :\n        Buffer.alloc(bytesNeeded)\n    };\n    if(decoder.comments.length > 0) {\n      image[\"comments\"] = decoder.comments;\n    }\n  } catch (err){\n    if (err instanceof RangeError){\n      throw new Error(\"Could not allocate enough memory for the image. \" +\n                      \"Required: \" + bytesNeeded);\n    } else {\n      throw err;\n    }\n  }\n\n  decoder.copyToImageData(image, opts.formatAsRGBA);\n\n  return image;\n}\n"},"lineCount":1127}},"error":null,"hash":"7b89d65c0f0ae593df21fc3b6c523f5e","cacheData":{"env":{}}}