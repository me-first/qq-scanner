{"id":"../../node_modules/exif-parser/lib/date.js","dependencies":[{"name":"C:\\Users\\MICRO WORLD\\Desktop\\Node-project\\qr-code\\package.json","includedInParent":true,"mtime":1604232931498},{"name":"C:\\Users\\MICRO WORLD\\Desktop\\Node-project\\qr-code\\node_modules\\exif-parser\\package.json","includedInParent":true,"mtime":1604203027973}],"generated":{"js":"function parseNumber(s) {\n\treturn parseInt(s, 10);\n}\n\n//in seconds\nvar hours = 3600;\nvar minutes = 60;\n\n//take date (year, month, day) and time (hour, minutes, seconds) digits in UTC\n//and return a timestamp in seconds\nfunction parseDateTimeParts(dateParts, timeParts) {\n\tdateParts = dateParts.map(parseNumber);\n\ttimeParts = timeParts.map(parseNumber);\n\tvar year = dateParts[0];\n\tvar month = dateParts[1] - 1;\n\tvar day = dateParts[2];\n\tvar hours = timeParts[0];\n\tvar minutes = timeParts[1];\n\tvar seconds = timeParts[2];\n\tvar date = Date.UTC(year, month, day, hours, minutes, seconds, 0);\n\tvar timestamp = date / 1000;\n\treturn timestamp;\n}\n\n//parse date with \"2004-09-04T23:39:06-08:00\" format,\n//one of the formats supported by ISO 8601, and\n//convert to utc timestamp in seconds\nfunction parseDateWithTimezoneFormat(dateTimeStr) {\n\n\tvar dateParts = dateTimeStr.substr(0, 10).split('-');\n\tvar timeParts = dateTimeStr.substr(11, 8).split(':');\n\tvar timezoneStr = dateTimeStr.substr(19, 6);\n\tvar timezoneParts = timezoneStr.split(':').map(parseNumber);\n\tvar timezoneOffset = (timezoneParts[0] * hours) +\n\t\t(timezoneParts[1] * minutes);\n\n\tvar timestamp = parseDateTimeParts(dateParts, timeParts);\n\t//minus because the timezoneOffset describes\n\t//how much the described time is ahead of UTC\n\ttimestamp -= timezoneOffset;\n\n\tif(typeof timestamp === 'number' && !isNaN(timestamp)) {\n\t\treturn timestamp;\n\t}\n}\n\n//parse date with \"YYYY:MM:DD hh:mm:ss\" format, convert to utc timestamp in seconds\nfunction parseDateWithSpecFormat(dateTimeStr) {\n\tvar parts = dateTimeStr.split(' '),\n\t\tdateParts = parts[0].split(':'),\n\t\ttimeParts = parts[1].split(':');\n\n\tvar timestamp = parseDateTimeParts(dateParts, timeParts);\n\n\tif(typeof timestamp === 'number' && !isNaN(timestamp)) {\n\t\treturn timestamp;\n\t}\n}\n\nfunction parseExifDate(dateTimeStr) {\n\t//some easy checks to determine two common date formats\n\n\t//is the date in the standard \"YYYY:MM:DD hh:mm:ss\" format?\n\tvar isSpecFormat = dateTimeStr.length === 19 &&\n\t\tdateTimeStr.charAt(4) === ':';\n\t//is the date in the non-standard format,\n\t//\"2004-09-04T23:39:06-08:00\" to include a timezone?\n\tvar isTimezoneFormat = dateTimeStr.length === 25 &&\n\t\tdateTimeStr.charAt(10) === 'T';\n\tvar timestamp;\n\n\tif(isTimezoneFormat) {\n\t\treturn parseDateWithTimezoneFormat(dateTimeStr);\n\t}\n\telse if(isSpecFormat) {\n\t\treturn parseDateWithSpecFormat(dateTimeStr);\n\t}\n}\n\nmodule.exports = {\n\tparseDateWithSpecFormat: parseDateWithSpecFormat,\n\tparseDateWithTimezoneFormat: parseDateWithTimezoneFormat,\n\tparseExifDate: parseExifDate\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/exif-parser/lib/date.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/exif-parser/lib/date.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/exif-parser/lib/date.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/exif-parser/lib/date.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/exif-parser/lib/date.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/exif-parser/lib/date.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/exif-parser/lib/date.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/exif-parser/lib/date.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/exif-parser/lib/date.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/exif-parser/lib/date.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/exif-parser/lib/date.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/exif-parser/lib/date.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/exif-parser/lib/date.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/exif-parser/lib/date.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/exif-parser/lib/date.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/exif-parser/lib/date.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/exif-parser/lib/date.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/exif-parser/lib/date.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/exif-parser/lib/date.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/exif-parser/lib/date.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/exif-parser/lib/date.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/exif-parser/lib/date.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/exif-parser/lib/date.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/exif-parser/lib/date.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/exif-parser/lib/date.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/exif-parser/lib/date.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/exif-parser/lib/date.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/exif-parser/lib/date.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/exif-parser/lib/date.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/exif-parser/lib/date.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/exif-parser/lib/date.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/exif-parser/lib/date.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/exif-parser/lib/date.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/exif-parser/lib/date.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/exif-parser/lib/date.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/exif-parser/lib/date.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/exif-parser/lib/date.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/exif-parser/lib/date.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/exif-parser/lib/date.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../../node_modules/exif-parser/lib/date.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../../node_modules/exif-parser/lib/date.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../../node_modules/exif-parser/lib/date.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../../node_modules/exif-parser/lib/date.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../../node_modules/exif-parser/lib/date.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../../node_modules/exif-parser/lib/date.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../../node_modules/exif-parser/lib/date.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../../node_modules/exif-parser/lib/date.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../../node_modules/exif-parser/lib/date.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../../node_modules/exif-parser/lib/date.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../../node_modules/exif-parser/lib/date.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../../node_modules/exif-parser/lib/date.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../../node_modules/exif-parser/lib/date.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../../node_modules/exif-parser/lib/date.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../../node_modules/exif-parser/lib/date.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../../node_modules/exif-parser/lib/date.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../../node_modules/exif-parser/lib/date.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../../node_modules/exif-parser/lib/date.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../../node_modules/exif-parser/lib/date.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../../node_modules/exif-parser/lib/date.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../../node_modules/exif-parser/lib/date.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../../node_modules/exif-parser/lib/date.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../../node_modules/exif-parser/lib/date.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../../node_modules/exif-parser/lib/date.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../../node_modules/exif-parser/lib/date.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../../node_modules/exif-parser/lib/date.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../../node_modules/exif-parser/lib/date.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../../node_modules/exif-parser/lib/date.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../../node_modules/exif-parser/lib/date.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../../node_modules/exif-parser/lib/date.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../../node_modules/exif-parser/lib/date.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../../node_modules/exif-parser/lib/date.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../../node_modules/exif-parser/lib/date.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../../node_modules/exif-parser/lib/date.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../../node_modules/exif-parser/lib/date.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../../node_modules/exif-parser/lib/date.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../../node_modules/exif-parser/lib/date.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../../node_modules/exif-parser/lib/date.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../../node_modules/exif-parser/lib/date.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../../node_modules/exif-parser/lib/date.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../../node_modules/exif-parser/lib/date.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../../node_modules/exif-parser/lib/date.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../../node_modules/exif-parser/lib/date.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../../node_modules/exif-parser/lib/date.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../../node_modules/exif-parser/lib/date.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../../node_modules/exif-parser/lib/date.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}}],"sources":{"../../node_modules/exif-parser/lib/date.js":"function parseNumber(s) {\n\treturn parseInt(s, 10);\n}\n\n//in seconds\nvar hours = 3600;\nvar minutes = 60;\n\n//take date (year, month, day) and time (hour, minutes, seconds) digits in UTC\n//and return a timestamp in seconds\nfunction parseDateTimeParts(dateParts, timeParts) {\n\tdateParts = dateParts.map(parseNumber);\n\ttimeParts = timeParts.map(parseNumber);\n\tvar year = dateParts[0];\n\tvar month = dateParts[1] - 1;\n\tvar day = dateParts[2];\n\tvar hours = timeParts[0];\n\tvar minutes = timeParts[1];\n\tvar seconds = timeParts[2];\n\tvar date = Date.UTC(year, month, day, hours, minutes, seconds, 0);\n\tvar timestamp = date / 1000;\n\treturn timestamp;\n}\n\n//parse date with \"2004-09-04T23:39:06-08:00\" format,\n//one of the formats supported by ISO 8601, and\n//convert to utc timestamp in seconds\nfunction parseDateWithTimezoneFormat(dateTimeStr) {\n\n\tvar dateParts = dateTimeStr.substr(0, 10).split('-');\n\tvar timeParts = dateTimeStr.substr(11, 8).split(':');\n\tvar timezoneStr = dateTimeStr.substr(19, 6);\n\tvar timezoneParts = timezoneStr.split(':').map(parseNumber);\n\tvar timezoneOffset = (timezoneParts[0] * hours) +\n\t\t(timezoneParts[1] * minutes);\n\n\tvar timestamp = parseDateTimeParts(dateParts, timeParts);\n\t//minus because the timezoneOffset describes\n\t//how much the described time is ahead of UTC\n\ttimestamp -= timezoneOffset;\n\n\tif(typeof timestamp === 'number' && !isNaN(timestamp)) {\n\t\treturn timestamp;\n\t}\n}\n\n//parse date with \"YYYY:MM:DD hh:mm:ss\" format, convert to utc timestamp in seconds\nfunction parseDateWithSpecFormat(dateTimeStr) {\n\tvar parts = dateTimeStr.split(' '),\n\t\tdateParts = parts[0].split(':'),\n\t\ttimeParts = parts[1].split(':');\n\n\tvar timestamp = parseDateTimeParts(dateParts, timeParts);\n\n\tif(typeof timestamp === 'number' && !isNaN(timestamp)) {\n\t\treturn timestamp;\n\t}\n}\n\nfunction parseExifDate(dateTimeStr) {\n\t//some easy checks to determine two common date formats\n\n\t//is the date in the standard \"YYYY:MM:DD hh:mm:ss\" format?\n\tvar isSpecFormat = dateTimeStr.length === 19 &&\n\t\tdateTimeStr.charAt(4) === ':';\n\t//is the date in the non-standard format,\n\t//\"2004-09-04T23:39:06-08:00\" to include a timezone?\n\tvar isTimezoneFormat = dateTimeStr.length === 25 &&\n\t\tdateTimeStr.charAt(10) === 'T';\n\tvar timestamp;\n\n\tif(isTimezoneFormat) {\n\t\treturn parseDateWithTimezoneFormat(dateTimeStr);\n\t}\n\telse if(isSpecFormat) {\n\t\treturn parseDateWithSpecFormat(dateTimeStr);\n\t}\n}\n\nmodule.exports = {\n\tparseDateWithSpecFormat: parseDateWithSpecFormat,\n\tparseDateWithTimezoneFormat: parseDateWithTimezoneFormat,\n\tparseExifDate: parseExifDate\n};\n"},"lineCount":85}},"error":null,"hash":"be72b44ee90a076ad0eec28421cc91b1","cacheData":{"env":{}}}