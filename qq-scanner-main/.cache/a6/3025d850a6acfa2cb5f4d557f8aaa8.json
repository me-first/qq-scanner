{"id":"../../node_modules/exif-parser/lib/exif.js","dependencies":[{"name":"C:\\Users\\MICRO WORLD\\Desktop\\Node-project\\qr-code\\package.json","includedInParent":true,"mtime":1604232931498},{"name":"C:\\Users\\MICRO WORLD\\Desktop\\Node-project\\qr-code\\node_modules\\exif-parser\\package.json","includedInParent":true,"mtime":1604203027973}],"generated":{"js":"/*jslint browser: true, devel: true, bitwise: false, debug: true, eqeq: false, es5: true, evil: false, forin: false, newcap: false, nomen: true, plusplus: true, regexp: false, unparam: false, sloppy: true, stupid: false, sub: false, todo: true, vars: true, white: true */\n\nfunction readExifValue(format, stream) {\n\tswitch(format) {\n\t\tcase 1: return stream.nextUInt8();\n\t\tcase 3: return stream.nextUInt16();\n\t\tcase 4: return stream.nextUInt32();\n\t\tcase 5: return [stream.nextUInt32(), stream.nextUInt32()];\n\t\tcase 6: return stream.nextInt8();\n\t\tcase 8: return stream.nextUInt16();\n\t\tcase 9: return stream.nextUInt32();\n\t\tcase 10: return [stream.nextInt32(), stream.nextInt32()];\n\t\tcase 11: return stream.nextFloat();\n\t\tcase 12: return stream.nextDouble();\n\t\tdefault: throw new Error('Invalid format while decoding: ' + format);\n\t}\n}\n\nfunction getBytesPerComponent(format) {\n\tswitch(format) {\n\t\tcase 1:\n\t\tcase 2:\n\t\tcase 6:\n\t\tcase 7:\n\t\t\treturn 1;\n\t\tcase 3:\n\t\tcase 8:\n\t\t\treturn 2;\n\t\tcase 4:\n\t\tcase 9:\n\t\tcase 11:\n\t\t\treturn 4;\n\t\tcase 5:\n\t\tcase 10:\n\t\tcase 12:\n\t\t\treturn 8;\n\t\tdefault:\n\t\t\treturn 0;\n\t}\n}\n\nfunction readExifTag(tiffMarker, stream) {\n\tvar tagType = stream.nextUInt16(),\n\t\tformat = stream.nextUInt16(),\n\t\tbytesPerComponent = getBytesPerComponent(format),\n\t\tcomponents = stream.nextUInt32(),\n\t\tvalueBytes = bytesPerComponent * components,\n\t\tvalues,\n\t\tvalue,\n\t\tc;\n\n\t/* if the value is bigger then 4 bytes, the value is in the data section of the IFD\n\tand the value present in the tag is the offset starting from the tiff header. So we replace the stream\n\twith a stream that is located at the given offset in the data section. s*/\n\tif(valueBytes > 4) {\n\t\tstream = tiffMarker.openWithOffset(stream.nextUInt32());\n\t}\n\t//we don't want to read strings as arrays\n\tif(format === 2) {\n\t\tvalues = stream.nextString(components);\n\t\t//cut off \\0 characters\n\t\tvar lastNull = values.indexOf('\\0');\n\t\tif(lastNull !== -1) {\n\t\t\tvalues = values.substr(0, lastNull);\n\t\t}\n\t}\n\telse if(format === 7) {\n\t\tvalues = stream.nextBuffer(components);\n\t}\n\telse if(format !== 0) {\n\t\tvalues = [];\n\t\tfor(c = 0; c < components; ++c) {\n\t\t\tvalues.push(readExifValue(format, stream));\n\t\t}\n\t}\n\t//since our stream is a stateful object, we need to skip remaining bytes\n\t//so our offset stays correct\n\tif(valueBytes < 4) {\n\t\tstream.skip(4 - valueBytes);\n\t}\n\n\treturn [tagType, values, format];\n}\n\nfunction readIFDSection(tiffMarker, stream, iterator) {\n\tvar numberOfEntries = stream.nextUInt16(), tag, i;\n\tfor(i = 0; i < numberOfEntries; ++i) {\n\t\ttag = readExifTag(tiffMarker, stream);\n\t\titerator(tag[0], tag[1], tag[2]);\n\t}\n}\n\nfunction readHeader(stream) {\n\tvar exifHeader = stream.nextString(6);\n\tif(exifHeader !== 'Exif\\0\\0') {\n\t\tthrow new Error('Invalid EXIF header');\n\t}\n\n\tvar tiffMarker = stream.mark();\n\tvar tiffHeader = stream.nextUInt16();\n\tif(tiffHeader === 0x4949) {\n\t\tstream.setBigEndian(false);\n\t} else if(tiffHeader === 0x4D4D) {\n\t\tstream.setBigEndian(true);\n\t} else {\n\t\tthrow new Error('Invalid TIFF header');\n\t}\n\tif(stream.nextUInt16() !== 0x002A) {\n\t\tthrow new Error('Invalid TIFF data');\n\t}\n\treturn tiffMarker;\n}\n\nmodule.exports = {\n\tIFD0: 1,\n\tIFD1: 2,\n\tGPSIFD: 3,\n\tSubIFD: 4,\n\tInteropIFD: 5,\n\tparseTags: function(stream, iterator) {\n\t\tvar tiffMarker;\n\t\ttry {\n\t\t\ttiffMarker = readHeader(stream);\n\t\t} catch(e) {\n\t\t\treturn false;\t//ignore APP1 sections with invalid headers\n\t\t}\n\t\tvar subIfdOffset, gpsOffset, interopOffset;\n\t\tvar ifd0Stream = tiffMarker.openWithOffset(stream.nextUInt32()),\n\t\t\tIFD0 = this.IFD0;\n\t\treadIFDSection(tiffMarker, ifd0Stream, function(tagType, value, format) {\n\t\t\tswitch(tagType) {\n\t\t\t\tcase 0x8825: gpsOffset = value[0]; break;\n\t\t\t\tcase 0x8769: subIfdOffset = value[0]; break;\n\t\t\t\tdefault: iterator(IFD0, tagType, value, format); break;\n\t\t\t}\n\t\t});\n\t\tvar ifd1Offset = ifd0Stream.nextUInt32();\n\t\tif(ifd1Offset !== 0) {\n\t\t\tvar ifd1Stream = tiffMarker.openWithOffset(ifd1Offset);\n\t\t\treadIFDSection(tiffMarker, ifd1Stream, iterator.bind(null, this.IFD1));\n\t\t}\n\n\t\tif(gpsOffset) {\n\t\t\tvar gpsStream = tiffMarker.openWithOffset(gpsOffset);\n\t\t\treadIFDSection(tiffMarker, gpsStream, iterator.bind(null, this.GPSIFD));\n\t\t}\n\n\t\tif(subIfdOffset) {\n\t\t\tvar subIfdStream = tiffMarker.openWithOffset(subIfdOffset), InteropIFD = this.InteropIFD;\n\t\t\treadIFDSection(tiffMarker, subIfdStream, function(tagType, value, format) {\n\t\t\t\tif(tagType === 0xA005) {\n\t\t\t\t\tinteropOffset = value[0];\n\t\t\t\t} else {\n\t\t\t\t\titerator(InteropIFD, tagType, value, format);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif(interopOffset) {\n\t\t\tvar interopStream = tiffMarker.openWithOffset(interopOffset);\n\t\t\treadIFDSection(tiffMarker, interopStream, iterator.bind(null, this.InteropIFD));\n\t\t}\n\t\treturn true;\n\t}\n};"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../../node_modules/exif-parser/lib/exif.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}}],"sources":{"../../node_modules/exif-parser/lib/exif.js":"/*jslint browser: true, devel: true, bitwise: false, debug: true, eqeq: false, es5: true, evil: false, forin: false, newcap: false, nomen: true, plusplus: true, regexp: false, unparam: false, sloppy: true, stupid: false, sub: false, todo: true, vars: true, white: true */\n\nfunction readExifValue(format, stream) {\n\tswitch(format) {\n\t\tcase 1: return stream.nextUInt8();\n\t\tcase 3: return stream.nextUInt16();\n\t\tcase 4: return stream.nextUInt32();\n\t\tcase 5: return [stream.nextUInt32(), stream.nextUInt32()];\n\t\tcase 6: return stream.nextInt8();\n\t\tcase 8: return stream.nextUInt16();\n\t\tcase 9: return stream.nextUInt32();\n\t\tcase 10: return [stream.nextInt32(), stream.nextInt32()];\n\t\tcase 11: return stream.nextFloat();\n\t\tcase 12: return stream.nextDouble();\n\t\tdefault: throw new Error('Invalid format while decoding: ' + format);\n\t}\n}\n\nfunction getBytesPerComponent(format) {\n\tswitch(format) {\n\t\tcase 1:\n\t\tcase 2:\n\t\tcase 6:\n\t\tcase 7:\n\t\t\treturn 1;\n\t\tcase 3:\n\t\tcase 8:\n\t\t\treturn 2;\n\t\tcase 4:\n\t\tcase 9:\n\t\tcase 11:\n\t\t\treturn 4;\n\t\tcase 5:\n\t\tcase 10:\n\t\tcase 12:\n\t\t\treturn 8;\n\t\tdefault:\n\t\t\treturn 0;\n\t}\n}\n\nfunction readExifTag(tiffMarker, stream) {\n\tvar tagType = stream.nextUInt16(),\n\t\tformat = stream.nextUInt16(),\n\t\tbytesPerComponent = getBytesPerComponent(format),\n\t\tcomponents = stream.nextUInt32(),\n\t\tvalueBytes = bytesPerComponent * components,\n\t\tvalues,\n\t\tvalue,\n\t\tc;\n\n\t/* if the value is bigger then 4 bytes, the value is in the data section of the IFD\n\tand the value present in the tag is the offset starting from the tiff header. So we replace the stream\n\twith a stream that is located at the given offset in the data section. s*/\n\tif(valueBytes > 4) {\n\t\tstream = tiffMarker.openWithOffset(stream.nextUInt32());\n\t}\n\t//we don't want to read strings as arrays\n\tif(format === 2) {\n\t\tvalues = stream.nextString(components);\n\t\t//cut off \\0 characters\n\t\tvar lastNull = values.indexOf('\\0');\n\t\tif(lastNull !== -1) {\n\t\t\tvalues = values.substr(0, lastNull);\n\t\t}\n\t}\n\telse if(format === 7) {\n\t\tvalues = stream.nextBuffer(components);\n\t}\n\telse if(format !== 0) {\n\t\tvalues = [];\n\t\tfor(c = 0; c < components; ++c) {\n\t\t\tvalues.push(readExifValue(format, stream));\n\t\t}\n\t}\n\t//since our stream is a stateful object, we need to skip remaining bytes\n\t//so our offset stays correct\n\tif(valueBytes < 4) {\n\t\tstream.skip(4 - valueBytes);\n\t}\n\n\treturn [tagType, values, format];\n}\n\nfunction readIFDSection(tiffMarker, stream, iterator) {\n\tvar numberOfEntries = stream.nextUInt16(), tag, i;\n\tfor(i = 0; i < numberOfEntries; ++i) {\n\t\ttag = readExifTag(tiffMarker, stream);\n\t\titerator(tag[0], tag[1], tag[2]);\n\t}\n}\n\nfunction readHeader(stream) {\n\tvar exifHeader = stream.nextString(6);\n\tif(exifHeader !== 'Exif\\0\\0') {\n\t\tthrow new Error('Invalid EXIF header');\n\t}\n\n\tvar tiffMarker = stream.mark();\n\tvar tiffHeader = stream.nextUInt16();\n\tif(tiffHeader === 0x4949) {\n\t\tstream.setBigEndian(false);\n\t} else if(tiffHeader === 0x4D4D) {\n\t\tstream.setBigEndian(true);\n\t} else {\n\t\tthrow new Error('Invalid TIFF header');\n\t}\n\tif(stream.nextUInt16() !== 0x002A) {\n\t\tthrow new Error('Invalid TIFF data');\n\t}\n\treturn tiffMarker;\n}\n\nmodule.exports = {\n\tIFD0: 1,\n\tIFD1: 2,\n\tGPSIFD: 3,\n\tSubIFD: 4,\n\tInteropIFD: 5,\n\tparseTags: function(stream, iterator) {\n\t\tvar tiffMarker;\n\t\ttry {\n\t\t\ttiffMarker = readHeader(stream);\n\t\t} catch(e) {\n\t\t\treturn false;\t//ignore APP1 sections with invalid headers\n\t\t}\n\t\tvar subIfdOffset, gpsOffset, interopOffset;\n\t\tvar ifd0Stream = tiffMarker.openWithOffset(stream.nextUInt32()),\n\t\t\tIFD0 = this.IFD0;\n\t\treadIFDSection(tiffMarker, ifd0Stream, function(tagType, value, format) {\n\t\t\tswitch(tagType) {\n\t\t\t\tcase 0x8825: gpsOffset = value[0]; break;\n\t\t\t\tcase 0x8769: subIfdOffset = value[0]; break;\n\t\t\t\tdefault: iterator(IFD0, tagType, value, format); break;\n\t\t\t}\n\t\t});\n\t\tvar ifd1Offset = ifd0Stream.nextUInt32();\n\t\tif(ifd1Offset !== 0) {\n\t\t\tvar ifd1Stream = tiffMarker.openWithOffset(ifd1Offset);\n\t\t\treadIFDSection(tiffMarker, ifd1Stream, iterator.bind(null, this.IFD1));\n\t\t}\n\n\t\tif(gpsOffset) {\n\t\t\tvar gpsStream = tiffMarker.openWithOffset(gpsOffset);\n\t\t\treadIFDSection(tiffMarker, gpsStream, iterator.bind(null, this.GPSIFD));\n\t\t}\n\n\t\tif(subIfdOffset) {\n\t\t\tvar subIfdStream = tiffMarker.openWithOffset(subIfdOffset), InteropIFD = this.InteropIFD;\n\t\t\treadIFDSection(tiffMarker, subIfdStream, function(tagType, value, format) {\n\t\t\t\tif(tagType === 0xA005) {\n\t\t\t\t\tinteropOffset = value[0];\n\t\t\t\t} else {\n\t\t\t\t\titerator(InteropIFD, tagType, value, format);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif(interopOffset) {\n\t\t\tvar interopStream = tiffMarker.openWithOffset(interopOffset);\n\t\t\treadIFDSection(tiffMarker, interopStream, iterator.bind(null, this.InteropIFD));\n\t\t}\n\t\treturn true;\n\t}\n};"},"lineCount":165}},"error":null,"hash":"ccb067160270135ad11b4fbc69314cdd","cacheData":{"env":{}}}